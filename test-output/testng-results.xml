<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="89" total="210" passed="121">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="1162460" started-at="2022-04-12T12:21:26 EET" finished-at="2022-04-12T12:40:48 EET">
    <groups>
    </groups>
    <test name="Battery" duration-ms="363216" started-at="2022-04-12T12:21:26 EET" finished-at="2022-04-12T12:27:29 EET">
      <class name="login.ClickloginbuttonfromHomescreenTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="beforeMethod" is-config="true" duration-ms="3016" started-at="2022-04-12T12:21:42 EET" finished-at="2022-04-12T12:21:45 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.clcikLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clcikLogin()[pri:3, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="clcikLogin" duration-ms="128" started-at="2022-04-12T12:21:45 EET" finished-at="2022-04-12T12:21:45 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clcikLogin -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="afterMethod" is-config="true" duration-ms="3279" started-at="2022-04-12T12:21:45 EET" finished-at="2022-04-12T12:21:49 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.clcikLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clcikLogin status=SUCCESS method=ClickloginbuttonfromHomescreenTest.clcikLogin()[pri:3, instance:login.ClickloginbuttonfromHomescreenTest@731f8236] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="beforeMethod" is-config="true" duration-ms="3015" started-at="2022-04-12T12:21:49 EET" finished-at="2022-04-12T12:21:52 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.SelectCountyCode()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectCountyCode()[pri:4, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="SelectCountyCode" duration-ms="97" started-at="2022-04-12T12:21:52 EET" finished-at="2022-04-12T12:21:52 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectCountyCode -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="afterMethod" is-config="true" duration-ms="3226" started-at="2022-04-12T12:21:52 EET" finished-at="2022-04-12T12:21:55 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.SelectCountyCode()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectCountyCode status=SUCCESS method=ClickloginbuttonfromHomescreenTest.SelectCountyCode()[pri:4, instance:login.ClickloginbuttonfromHomescreenTest@731f8236] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:21:55 EET" finished-at="2022-04-12T12:21:58 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.Searchforcounrty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Searchforcounrty()[pri:5, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="Searchforcounrty" duration-ms="156" started-at="2022-04-12T12:21:58 EET" finished-at="2022-04-12T12:21:58 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Searchforcounrty -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="afterMethod" is-config="true" duration-ms="3232" started-at="2022-04-12T12:21:58 EET" finished-at="2022-04-12T12:22:01 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.Searchforcounrty()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Searchforcounrty status=SUCCESS method=ClickloginbuttonfromHomescreenTest.Searchforcounrty()[pri:5, instance:login.ClickloginbuttonfromHomescreenTest@731f8236] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="beforeMethod" is-config="true" duration-ms="3013" started-at="2022-04-12T12:22:01 EET" finished-at="2022-04-12T12:22:04 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.SelectEgypt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectEgypt()[pri:6, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="SelectEgypt" duration-ms="130" started-at="2022-04-12T12:22:04 EET" finished-at="2022-04-12T12:22:05 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectEgypt -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="afterMethod" is-config="true" duration-ms="3255" started-at="2022-04-12T12:22:05 EET" finished-at="2022-04-12T12:22:08 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.SelectEgypt()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectEgypt status=SUCCESS method=ClickloginbuttonfromHomescreenTest.SelectEgypt()[pri:6, instance:login.ClickloginbuttonfromHomescreenTest@731f8236] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="beforeMethod" is-config="true" duration-ms="3004" started-at="2022-04-12T12:22:08 EET" finished-at="2022-04-12T12:22:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.addMobileNumber(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addMobileNumber(java.lang.String,java.lang.String)[pri:7, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="addMobileNumber" duration-ms="571" started-at="2022-04-12T12:22:11 EET" data-provider="loginUsers" finished-at="2022-04-12T12:22:12 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amira]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMobileNumber -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="afterMethod" is-config="true" duration-ms="3269" started-at="2022-04-12T12:22:12 EET" finished-at="2022-04-12T12:22:15 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.addMobileNumber(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=addMobileNumber status=SUCCESS method=ClickloginbuttonfromHomescreenTest.addMobileNumber(java.lang.String,java.lang.String)[pri:7, instance:login.ClickloginbuttonfromHomescreenTest@731f8236] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="beforeMethod" is-config="true" duration-ms="3003" started-at="2022-04-12T12:22:15 EET" finished-at="2022-04-12T12:22:18 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.clickContinue()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickContinue()[pri:8, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="clickContinue" duration-ms="82" started-at="2022-04-12T12:22:18 EET" finished-at="2022-04-12T12:22:18 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickContinue -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="afterMethod" is-config="true" duration-ms="3217" started-at="2022-04-12T12:22:18 EET" finished-at="2022-04-12T12:22:21 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.clickContinue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickContinue status=SUCCESS method=ClickloginbuttonfromHomescreenTest.clickContinue()[pri:8, instance:login.ClickloginbuttonfromHomescreenTest@731f8236] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="beforeMethod" is-config="true" duration-ms="3008" started-at="2022-04-12T12:22:21 EET" finished-at="2022-04-12T12:22:24 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.getotp(java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getotp(java.lang.String,java.lang.String)[pri:9, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="getotp" duration-ms="7845" started-at="2022-04-12T12:22:24 EET" data-provider="loginUsers" finished-at="2022-04-12T12:22:32 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amira]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getotp -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@731f8236]" name="afterMethod" is-config="true" duration-ms="3288" started-at="2022-04-12T12:22:32 EET" finished-at="2022-04-12T12:22:35 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.getotp(java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=getotp status=SUCCESS method=ClickloginbuttonfromHomescreenTest.getotp(java.lang.String,java.lang.String)[pri:9, instance:login.ClickloginbuttonfromHomescreenTest@731f8236] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- login.ClickloginbuttonfromHomescreenTest -->
      <class name="driverApi.API_Driver_vehiclepickedup_Test">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:driverApi.API_Driver_vehiclepickedup_Test@64d2d351]" name="beforeMethod" is-config="true" duration-ms="3016" started-at="2022-04-12T12:24:23 EET" finished-at="2022-04-12T12:24:26 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_vehiclepickedup_Test.vehiclepickedup(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="vehiclepickedup(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_vehiclepickedup_Test@64d2d351]" name="vehiclepickedup" duration-ms="4842" started-at="2022-04-12T12:24:26 EET" data-provider="access_token" finished-at="2022-04-12T12:24:31 EET">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[92272]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[518404]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[767981dc71f044e8a2cd36385a652f58]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehiclepickedup -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:driverApi.API_Driver_vehiclepickedup_Test@64d2d351]" name="afterMethod" is-config="true" duration-ms="3216" started-at="2022-04-12T12:24:31 EET" finished-at="2022-04-12T12:24:34 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_vehiclepickedup_Test.vehiclepickedup(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=vehiclepickedup status=SUCCESS method=API_Driver_vehiclepickedup_Test.vehiclepickedup(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_vehiclepickedup_Test@64d2d351] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- driverApi.API_Driver_vehiclepickedup_Test -->
      <class name="fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest@1dd92fe2]" name="beforeMethod" is-config="true" duration-ms="3003" started-at="2022-04-12T12:23:09 EET" finished-at="2022-04-12T12:23:12 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest.OpenFleetURL(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="OpenFleetURL(java.lang.String,java.lang.String)[pri:11, instance:fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest@1dd92fe2]" name="OpenFleetURL" duration-ms="59409" started-at="2022-04-12T12:23:12 EET" data-provider="loginUsers" finished-at="2022-04-12T12:24:12 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amira]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenFleetURL -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest@1dd92fe2]" name="afterMethod" is-config="true" duration-ms="3302" started-at="2022-04-12T12:24:12 EET" finished-at="2022-04-12T12:24:15 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest.OpenFleetURL(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=OpenFleetURL status=SUCCESS method=OpenFleetAndAssignRequestFuelAndBatteryTest.OpenFleetURL(java.lang.String,java.lang.String)[pri:11, instance:fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest@1dd92fe2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest -->
      <class name="common.RatesheetTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@491666ad]" name="beforeMethod" is-config="true" duration-ms="3007" started-at="2022-04-12T12:26:36 EET" finished-at="2022-04-12T12:26:39 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.ratedriver()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ratedriver()[pri:1, instance:common.RatesheetTest@491666ad]" name="ratedriver" duration-ms="75" started-at="2022-04-12T12:26:39 EET" finished-at="2022-04-12T12:26:39 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ratedriver -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@491666ad]" name="afterMethod" is-config="true" duration-ms="3253" started-at="2022-04-12T12:26:39 EET" finished-at="2022-04-12T12:26:43 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.ratedriver()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ratedriver status=SUCCESS method=RatesheetTest.ratedriver()[pri:1, instance:common.RatesheetTest@491666ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@491666ad]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:26:43 EET" finished-at="2022-04-12T12:26:46 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.clickratingBarButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickratingBarButton()[pri:2, instance:common.RatesheetTest@491666ad]" name="clickratingBarButton" duration-ms="81" started-at="2022-04-12T12:26:46 EET" finished-at="2022-04-12T12:26:46 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickratingBarButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@491666ad]" name="afterMethod" is-config="true" duration-ms="3229" started-at="2022-04-12T12:26:46 EET" finished-at="2022-04-12T12:26:49 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.clickratingBarButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickratingBarButton status=SUCCESS method=RatesheetTest.clickratingBarButton()[pri:2, instance:common.RatesheetTest@491666ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@491666ad]" name="beforeMethod" is-config="true" duration-ms="3000" started-at="2022-04-12T12:26:49 EET" finished-at="2022-04-12T12:26:52 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.submitRateButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="submitRateButton()[pri:3, instance:common.RatesheetTest@491666ad]" name="submitRateButton" duration-ms="79" started-at="2022-04-12T12:26:52 EET" finished-at="2022-04-12T12:26:52 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitRateButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@491666ad]" name="afterMethod" is-config="true" duration-ms="3227" started-at="2022-04-12T12:26:52 EET" finished-at="2022-04-12T12:26:55 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.submitRateButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=submitRateButton status=SUCCESS method=RatesheetTest.submitRateButton()[pri:3, instance:common.RatesheetTest@491666ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@491666ad]" name="beforeMethod" is-config="true" duration-ms="3016" started-at="2022-04-12T12:26:55 EET" finished-at="2022-04-12T12:26:58 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.assertError()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="assertError()[pri:4, instance:common.RatesheetTest@491666ad]" name="assertError" duration-ms="60" started-at="2022-04-12T12:26:58 EET" finished-at="2022-04-12T12:26:58 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertError -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@491666ad]" name="afterMethod" is-config="true" duration-ms="3248" started-at="2022-04-12T12:26:58 EET" finished-at="2022-04-12T12:27:02 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.assertError()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=assertError status=SUCCESS method=RatesheetTest.assertError()[pri:4, instance:common.RatesheetTest@491666ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@491666ad]" name="beforeMethod" is-config="true" duration-ms="3014" started-at="2022-04-12T12:27:02 EET" finished-at="2022-04-12T12:27:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.SelectReason()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectReason()[pri:5, instance:common.RatesheetTest@491666ad]" name="SelectReason" duration-ms="99" started-at="2022-04-12T12:27:05 EET" finished-at="2022-04-12T12:27:05 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectReason -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@491666ad]" name="afterMethod" is-config="true" duration-ms="3221" started-at="2022-04-12T12:27:05 EET" finished-at="2022-04-12T12:27:08 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.SelectReason()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectReason status=SUCCESS method=RatesheetTest.SelectReason()[pri:5, instance:common.RatesheetTest@491666ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@491666ad]" name="beforeMethod" is-config="true" duration-ms="3003" started-at="2022-04-12T12:27:08 EET" finished-at="2022-04-12T12:27:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.IssuesTextAssert()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="IssuesTextAssert()[pri:6, instance:common.RatesheetTest@491666ad]" name="IssuesTextAssert" duration-ms="51" started-at="2022-04-12T12:27:11 EET" finished-at="2022-04-12T12:27:11 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IssuesTextAssert -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@491666ad]" name="afterMethod" is-config="true" duration-ms="3248" started-at="2022-04-12T12:27:11 EET" finished-at="2022-04-12T12:27:14 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.IssuesTextAssert()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=IssuesTextAssert status=SUCCESS method=RatesheetTest.IssuesTextAssert()[pri:6, instance:common.RatesheetTest@491666ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@491666ad]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:27:14 EET" finished-at="2022-04-12T12:27:17 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.allstarts() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="allstarts()[pri:7, instance:common.RatesheetTest@491666ad]" name="allstarts" duration-ms="2110" started-at="2022-04-12T12:27:17 EET" finished-at="2022-04-12T12:27:19 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allstarts -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@491666ad]" name="afterMethod" is-config="true" duration-ms="3237" started-at="2022-04-12T12:27:19 EET" finished-at="2022-04-12T12:27:23 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.allstarts() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=allstarts status=SUCCESS method=RatesheetTest.allstarts()[pri:7, instance:common.RatesheetTest@491666ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@491666ad]" name="beforeMethod" is-config="true" duration-ms="3014" started-at="2022-04-12T12:27:23 EET" finished-at="2022-04-12T12:27:26 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.submit5RateButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="submit5RateButton()[pri:8, instance:common.RatesheetTest@491666ad]" name="submit5RateButton" duration-ms="126" started-at="2022-04-12T12:27:26 EET" finished-at="2022-04-12T12:27:26 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit5RateButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@491666ad]" name="afterMethod" is-config="true" duration-ms="3237" started-at="2022-04-12T12:27:26 EET" finished-at="2022-04-12T12:27:29 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.submit5RateButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=submit5RateButton status=SUCCESS method=RatesheetTest.submit5RateButton()[pri:8, instance:common.RatesheetTest@491666ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- common.RatesheetTest -->
      <class name="towing.DismissTowingRatesheetTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="beforeMethod" is-config="true" duration-ms="3014" started-at="2022-04-12T12:24:41 EET" finished-at="2022-04-12T12:24:44 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.clickratingBarButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickratingBarButton()[pri:2, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="clickratingBarButton" duration-ms="30690" started-at="2022-04-12T12:24:44 EET" finished-at="2022-04-12T12:25:15 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickratingBarButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="afterMethod" is-config="true" duration-ms="3247" started-at="2022-04-12T12:25:15 EET" finished-at="2022-04-12T12:25:18 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.clickratingBarButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickratingBarButton status=SUCCESS method=DismissTowingRatesheetTest.clickratingBarButton()[pri:2, instance:towing.DismissTowingRatesheetTest@4f9a3314] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="beforeMethod" is-config="true" duration-ms="3009" started-at="2022-04-12T12:25:18 EET" finished-at="2022-04-12T12:25:21 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.submitRateButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="submitRateButton()[pri:3, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="submitRateButton" duration-ms="98" started-at="2022-04-12T12:25:21 EET" finished-at="2022-04-12T12:25:21 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitRateButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="afterMethod" is-config="true" duration-ms="3249" started-at="2022-04-12T12:25:21 EET" finished-at="2022-04-12T12:25:25 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.submitRateButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=submitRateButton status=SUCCESS method=DismissTowingRatesheetTest.submitRateButton()[pri:3, instance:towing.DismissTowingRatesheetTest@4f9a3314] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="beforeMethod" is-config="true" duration-ms="3003" started-at="2022-04-12T12:25:25 EET" finished-at="2022-04-12T12:25:28 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.assertError()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="assertError()[pri:4, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="assertError" duration-ms="65" started-at="2022-04-12T12:25:28 EET" finished-at="2022-04-12T12:25:28 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertError -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="afterMethod" is-config="true" duration-ms="3227" started-at="2022-04-12T12:25:28 EET" finished-at="2022-04-12T12:25:31 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.assertError()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=assertError status=SUCCESS method=DismissTowingRatesheetTest.assertError()[pri:4, instance:towing.DismissTowingRatesheetTest@4f9a3314] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="beforeMethod" is-config="true" duration-ms="3013" started-at="2022-04-12T12:25:31 EET" finished-at="2022-04-12T12:25:34 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.SelectReason()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectReason()[pri:5, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="SelectReason" duration-ms="89" started-at="2022-04-12T12:25:34 EET" finished-at="2022-04-12T12:25:34 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectReason -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="afterMethod" is-config="true" duration-ms="3280" started-at="2022-04-12T12:25:34 EET" finished-at="2022-04-12T12:25:37 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.SelectReason()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectReason status=SUCCESS method=DismissTowingRatesheetTest.SelectReason()[pri:5, instance:towing.DismissTowingRatesheetTest@4f9a3314] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="beforeMethod" is-config="true" duration-ms="3008" started-at="2022-04-12T12:25:37 EET" finished-at="2022-04-12T12:25:40 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.IssuesTextAssert()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="IssuesTextAssert()[pri:6, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="IssuesTextAssert" duration-ms="68" started-at="2022-04-12T12:25:40 EET" finished-at="2022-04-12T12:25:40 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IssuesTextAssert -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="afterMethod" is-config="true" duration-ms="3236" started-at="2022-04-12T12:25:40 EET" finished-at="2022-04-12T12:25:44 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.IssuesTextAssert()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=IssuesTextAssert status=SUCCESS method=DismissTowingRatesheetTest.IssuesTextAssert()[pri:6, instance:towing.DismissTowingRatesheetTest@4f9a3314] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="beforeMethod" is-config="true" duration-ms="3004" started-at="2022-04-12T12:25:44 EET" finished-at="2022-04-12T12:25:47 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.allstarts() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="allstarts()[pri:7, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="allstarts" duration-ms="2090" started-at="2022-04-12T12:25:47 EET" finished-at="2022-04-12T12:25:49 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allstarts -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="afterMethod" is-config="true" duration-ms="3235" started-at="2022-04-12T12:25:49 EET" finished-at="2022-04-12T12:25:52 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.allstarts() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=allstarts status=SUCCESS method=DismissTowingRatesheetTest.allstarts()[pri:7, instance:towing.DismissTowingRatesheetTest@4f9a3314] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="beforeMethod" is-config="true" duration-ms="3005" started-at="2022-04-12T12:25:52 EET" finished-at="2022-04-12T12:25:55 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.clickismissRate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickismissRate()[pri:8, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="clickismissRate" duration-ms="61" started-at="2022-04-12T12:25:55 EET" finished-at="2022-04-12T12:25:55 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickismissRate -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@4f9a3314]" name="afterMethod" is-config="true" duration-ms="3249" started-at="2022-04-12T12:25:55 EET" finished-at="2022-04-12T12:25:58 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.clickismissRate()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickismissRate status=SUCCESS method=DismissTowingRatesheetTest.clickismissRate()[pri:8, instance:towing.DismissTowingRatesheetTest@4f9a3314] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- towing.DismissTowingRatesheetTest -->
      <class name="common.RequestHistoryTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@3b2c72c2]" name="beforeMethod" is-config="true" duration-ms="3002" started-at="2022-04-12T12:25:58 EET" finished-at="2022-04-12T12:26:01 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.ClickMenu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ClickMenu()[pri:1, instance:common.RequestHistoryTest@3b2c72c2]" name="ClickMenu" duration-ms="76" started-at="2022-04-12T12:26:01 EET" finished-at="2022-04-12T12:26:01 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickMenu -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@3b2c72c2]" name="afterMethod" is-config="true" duration-ms="3264" started-at="2022-04-12T12:26:01 EET" finished-at="2022-04-12T12:26:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.ClickMenu()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickMenu status=SUCCESS method=RequestHistoryTest.ClickMenu()[pri:1, instance:common.RequestHistoryTest@3b2c72c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@3b2c72c2]" name="beforeMethod" is-config="true" duration-ms="3005" started-at="2022-04-12T12:26:05 EET" finished-at="2022-04-12T12:26:08 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.MenuRequestHistory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="MenuRequestHistory()[pri:2, instance:common.RequestHistoryTest@3b2c72c2]" name="MenuRequestHistory" duration-ms="516" started-at="2022-04-12T12:26:08 EET" finished-at="2022-04-12T12:26:08 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MenuRequestHistory -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@3b2c72c2]" name="afterMethod" is-config="true" duration-ms="3240" started-at="2022-04-12T12:26:08 EET" finished-at="2022-04-12T12:26:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.MenuRequestHistory()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=MenuRequestHistory status=SUCCESS method=RequestHistoryTest.MenuRequestHistory()[pri:2, instance:common.RequestHistoryTest@3b2c72c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@3b2c72c2]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:26:11 EET" finished-at="2022-04-12T12:26:14 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.ClickFristItemRequestHistory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ClickFristItemRequestHistory()[pri:5, instance:common.RequestHistoryTest@3b2c72c2]" name="ClickFristItemRequestHistory" duration-ms="79" started-at="2022-04-12T12:26:14 EET" finished-at="2022-04-12T12:26:14 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickFristItemRequestHistory -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@3b2c72c2]" name="afterMethod" is-config="true" duration-ms="3241" started-at="2022-04-12T12:26:14 EET" finished-at="2022-04-12T12:26:18 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.ClickFristItemRequestHistory()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickFristItemRequestHistory status=SUCCESS method=RequestHistoryTest.ClickFristItemRequestHistory()[pri:5, instance:common.RequestHistoryTest@3b2c72c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@3b2c72c2]" name="beforeMethod" is-config="true" duration-ms="3010" started-at="2022-04-12T12:26:18 EET" finished-at="2022-04-12T12:26:21 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.scrollitemetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="scrollitemetails()[pri:6, instance:common.RequestHistoryTest@3b2c72c2]" name="scrollitemetails" duration-ms="372" started-at="2022-04-12T12:26:21 EET" finished-at="2022-04-12T12:26:21 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scrollitemetails -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@3b2c72c2]" name="afterMethod" is-config="true" duration-ms="3223" started-at="2022-04-12T12:26:21 EET" finished-at="2022-04-12T12:26:24 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.scrollitemetails()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=scrollitemetails status=SUCCESS method=RequestHistoryTest.scrollitemetails()[pri:6, instance:common.RequestHistoryTest@3b2c72c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@3b2c72c2]" name="beforeMethod" is-config="true" duration-ms="3003" started-at="2022-04-12T12:26:24 EET" finished-at="2022-04-12T12:26:27 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.callriver()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="callriver()[pri:7, instance:common.RequestHistoryTest@3b2c72c2]" name="callriver" duration-ms="5844" started-at="2022-04-12T12:26:27 EET" finished-at="2022-04-12T12:26:33 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callriver -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@3b2c72c2]" name="afterMethod" is-config="true" duration-ms="3242" started-at="2022-04-12T12:26:33 EET" finished-at="2022-04-12T12:26:36 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.callriver()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=callriver status=SUCCESS method=RequestHistoryTest.callriver()[pri:7, instance:common.RequestHistoryTest@3b2c72c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- common.RequestHistoryTest -->
      <class name="common.allowLocationPermissionTest">
        <test-method status="PASS" signature="beforeTest(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)[pri:0, instance:common.allowLocationPermissionTest@58134517]" name="beforeTest" is-config="true" duration-ms="9068" started-at="2022-04-12T12:21:26 EET" finished-at="2022-04-12T12:21:35 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.allowLocationPermissionTest@58134517]" name="beforeMethod" is-config="true" duration-ms="3006" started-at="2022-04-12T12:21:35 EET" finished-at="2022-04-12T12:21:38 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.allowLocationPermissionTest.clcallowLocationPermissionTestikLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clcallowLocationPermissionTestikLogin()[pri:2, instance:common.allowLocationPermissionTest@58134517]" name="clcallowLocationPermissionTestikLogin" duration-ms="1019" started-at="2022-04-12T12:21:38 EET" finished-at="2022-04-12T12:21:39 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clcallowLocationPermissionTestikLogin -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.allowLocationPermissionTest@58134517]" name="afterMethod" is-config="true" duration-ms="3293" started-at="2022-04-12T12:21:39 EET" finished-at="2022-04-12T12:21:42 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.allowLocationPermissionTest.clcallowLocationPermissionTestikLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clcallowLocationPermissionTestikLogin status=SUCCESS method=allowLocationPermissionTest.clcallowLocationPermissionTestikLogin()[pri:2, instance:common.allowLocationPermissionTest@58134517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- common.allowLocationPermissionTest -->
      <class name="Battery.addNormalBatteryRequestTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="beforeMethod" is-config="true" duration-ms="3009" started-at="2022-04-12T12:22:35 EET" finished-at="2022-04-12T12:22:38 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Battery.addNormalBatteryRequestTest.MoveMap()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="MoveMap()[pri:29, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="MoveMap" duration-ms="880" started-at="2022-04-12T12:22:38 EET" finished-at="2022-04-12T12:22:39 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MoveMap -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="afterMethod" is-config="true" duration-ms="3279" started-at="2022-04-12T12:22:39 EET" finished-at="2022-04-12T12:22:43 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Battery.addNormalBatteryRequestTest.MoveMap()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=MoveMap status=SUCCESS method=addNormalBatteryRequestTest.MoveMap()[pri:29, instance:Battery.addNormalBatteryRequestTest@255b53dc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="beforeMethod" is-config="true" duration-ms="3001" started-at="2022-04-12T12:22:43 EET" finished-at="2022-04-12T12:22:46 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Battery.addNormalBatteryRequestTest.DragServiceSheet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="DragServiceSheet()[pri:30, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="DragServiceSheet" duration-ms="769" started-at="2022-04-12T12:22:46 EET" finished-at="2022-04-12T12:22:46 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DragServiceSheet -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="afterMethod" is-config="true" duration-ms="3306" started-at="2022-04-12T12:22:46 EET" finished-at="2022-04-12T12:22:50 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Battery.addNormalBatteryRequestTest.DragServiceSheet()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=DragServiceSheet status=SUCCESS method=addNormalBatteryRequestTest.DragServiceSheet()[pri:30, instance:Battery.addNormalBatteryRequestTest@255b53dc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="beforeMethod" is-config="true" duration-ms="3010" started-at="2022-04-12T12:22:50 EET" finished-at="2022-04-12T12:22:53 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Battery.addNormalBatteryRequestTest.SelectBattery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectBattery()[pri:31, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="SelectBattery" duration-ms="388" started-at="2022-04-12T12:22:53 EET" finished-at="2022-04-12T12:22:53 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectBattery -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="afterMethod" is-config="true" duration-ms="3264" started-at="2022-04-12T12:22:53 EET" finished-at="2022-04-12T12:22:56 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Battery.addNormalBatteryRequestTest.SelectBattery()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectBattery status=SUCCESS method=addNormalBatteryRequestTest.SelectBattery()[pri:31, instance:Battery.addNormalBatteryRequestTest@255b53dc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="beforeMethod" is-config="true" duration-ms="3015" started-at="2022-04-12T12:22:56 EET" finished-at="2022-04-12T12:22:59 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Battery.addNormalBatteryRequestTest.ConfirmSummery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ConfirmSummery()[pri:32, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="ConfirmSummery" duration-ms="115" started-at="2022-04-12T12:22:59 EET" finished-at="2022-04-12T12:22:59 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmSummery -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="afterMethod" is-config="true" duration-ms="3339" started-at="2022-04-12T12:22:59 EET" finished-at="2022-04-12T12:23:03 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Battery.addNormalBatteryRequestTest.ConfirmSummery()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmSummery status=SUCCESS method=addNormalBatteryRequestTest.ConfirmSummery()[pri:32, instance:Battery.addNormalBatteryRequestTest@255b53dc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="beforeMethod" is-config="true" duration-ms="3000" started-at="2022-04-12T12:23:03 EET" finished-at="2022-04-12T12:23:06 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Battery.addNormalBatteryRequestTest.ConfirmBaymnet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ConfirmBaymnet()[pri:33, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="ConfirmBaymnet" duration-ms="285" started-at="2022-04-12T12:23:06 EET" finished-at="2022-04-12T12:23:06 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmBaymnet -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Battery.addNormalBatteryRequestTest@255b53dc]" name="afterMethod" is-config="true" duration-ms="3281" started-at="2022-04-12T12:23:06 EET" finished-at="2022-04-12T12:23:09 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Battery.addNormalBatteryRequestTest.ConfirmBaymnet()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmBaymnet status=SUCCESS method=addNormalBatteryRequestTest.ConfirmBaymnet()[pri:33, instance:Battery.addNormalBatteryRequestTest@255b53dc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- Battery.addNormalBatteryRequestTest -->
      <class name="driverApi.API_Driver_FuelAndBattery_completejob_Test">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:driverApi.API_Driver_FuelAndBattery_completejob_Test@1b68b9a4]" name="beforeMethod" is-config="true" duration-ms="3014" started-at="2022-04-12T12:24:34 EET" finished-at="2022-04-12T12:24:37 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_FuelAndBattery_completejob_Test.completejob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="completejob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_FuelAndBattery_completejob_Test@1b68b9a4]" name="completejob" duration-ms="765" started-at="2022-04-12T12:24:37 EET" data-provider="access_token" finished-at="2022-04-12T12:24:38 EET">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[92272]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[518404]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[767981dc71f044e8a2cd36385a652f58]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completejob -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:driverApi.API_Driver_FuelAndBattery_completejob_Test@1b68b9a4]" name="afterMethod" is-config="true" duration-ms="3257" started-at="2022-04-12T12:24:38 EET" finished-at="2022-04-12T12:24:41 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_FuelAndBattery_completejob_Test.completejob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=completejob status=SUCCESS method=API_Driver_FuelAndBattery_completejob_Test.completejob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_FuelAndBattery_completejob_Test@1b68b9a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- driverApi.API_Driver_FuelAndBattery_completejob_Test -->
      <class name="driverApi.API_Driver_Startjob_Test">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:driverApi.API_Driver_Startjob_Test@6b53e23f]" name="beforeMethod" is-config="true" duration-ms="3007" started-at="2022-04-12T12:24:15 EET" finished-at="2022-04-12T12:24:18 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_Startjob_Test.driverLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="driverLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_Startjob_Test@6b53e23f]" name="driverLogin" duration-ms="1766" started-at="2022-04-12T12:24:18 EET" data-provider="driverdata" finished-at="2022-04-12T12:24:20 EET">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[92272]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[518404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverLogin -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:driverApi.API_Driver_Startjob_Test@6b53e23f]" name="afterMethod" is-config="true" duration-ms="3256" started-at="2022-04-12T12:24:20 EET" finished-at="2022-04-12T12:24:23 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_Startjob_Test.driverLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=driverLogin status=SUCCESS method=API_Driver_Startjob_Test.driverLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_Startjob_Test@6b53e23f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- driverApi.API_Driver_Startjob_Test -->
    </test> <!-- Battery -->
    <test name="Fuel" duration-ms="399868" started-at="2022-04-12T12:27:29 EET" finished-at="2022-04-12T12:34:09 EET">
      <class name="login.ClickloginbuttonfromHomescreenTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="beforeMethod" is-config="true" duration-ms="3008" started-at="2022-04-12T12:27:45 EET" finished-at="2022-04-12T12:27:48 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.clcikLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clcikLogin()[pri:3, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="clcikLogin" duration-ms="130" started-at="2022-04-12T12:27:48 EET" finished-at="2022-04-12T12:27:48 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clcikLogin -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="afterMethod" is-config="true" duration-ms="3266" started-at="2022-04-12T12:27:48 EET" finished-at="2022-04-12T12:27:52 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.clcikLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clcikLogin status=SUCCESS method=ClickloginbuttonfromHomescreenTest.clcikLogin()[pri:3, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="beforeMethod" is-config="true" duration-ms="3013" started-at="2022-04-12T12:27:52 EET" finished-at="2022-04-12T12:27:55 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.SelectCountyCode()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectCountyCode()[pri:4, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="SelectCountyCode" duration-ms="81" started-at="2022-04-12T12:27:55 EET" finished-at="2022-04-12T12:27:55 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectCountyCode -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="afterMethod" is-config="true" duration-ms="3252" started-at="2022-04-12T12:27:55 EET" finished-at="2022-04-12T12:27:58 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.SelectCountyCode()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectCountyCode status=SUCCESS method=ClickloginbuttonfromHomescreenTest.SelectCountyCode()[pri:4, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="beforeMethod" is-config="true" duration-ms="3006" started-at="2022-04-12T12:27:58 EET" finished-at="2022-04-12T12:28:01 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.Searchforcounrty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Searchforcounrty()[pri:5, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="Searchforcounrty" duration-ms="715" started-at="2022-04-12T12:28:01 EET" finished-at="2022-04-12T12:28:02 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Searchforcounrty -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="afterMethod" is-config="true" duration-ms="3251" started-at="2022-04-12T12:28:02 EET" finished-at="2022-04-12T12:28:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.Searchforcounrty()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Searchforcounrty status=SUCCESS method=ClickloginbuttonfromHomescreenTest.Searchforcounrty()[pri:5, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="beforeMethod" is-config="true" duration-ms="3003" started-at="2022-04-12T12:28:05 EET" finished-at="2022-04-12T12:28:08 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.SelectEgypt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectEgypt()[pri:6, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="SelectEgypt" duration-ms="142" started-at="2022-04-12T12:28:08 EET" finished-at="2022-04-12T12:28:08 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectEgypt -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="afterMethod" is-config="true" duration-ms="3269" started-at="2022-04-12T12:28:08 EET" finished-at="2022-04-12T12:28:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.SelectEgypt()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectEgypt status=SUCCESS method=ClickloginbuttonfromHomescreenTest.SelectEgypt()[pri:6, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="beforeMethod" is-config="true" duration-ms="3007" started-at="2022-04-12T12:28:11 EET" finished-at="2022-04-12T12:28:14 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.addMobileNumber(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addMobileNumber(java.lang.String,java.lang.String)[pri:7, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="addMobileNumber" duration-ms="579" started-at="2022-04-12T12:28:14 EET" data-provider="loginUsers" finished-at="2022-04-12T12:28:15 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amira]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMobileNumber -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="afterMethod" is-config="true" duration-ms="3308" started-at="2022-04-12T12:28:15 EET" finished-at="2022-04-12T12:28:18 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.addMobileNumber(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=addMobileNumber status=SUCCESS method=ClickloginbuttonfromHomescreenTest.addMobileNumber(java.lang.String,java.lang.String)[pri:7, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="beforeMethod" is-config="true" duration-ms="3005" started-at="2022-04-12T12:28:18 EET" finished-at="2022-04-12T12:28:21 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.clickContinue()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickContinue()[pri:8, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="clickContinue" duration-ms="83" started-at="2022-04-12T12:28:21 EET" finished-at="2022-04-12T12:28:21 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickContinue -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="afterMethod" is-config="true" duration-ms="3227" started-at="2022-04-12T12:28:21 EET" finished-at="2022-04-12T12:28:24 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.clickContinue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickContinue status=SUCCESS method=ClickloginbuttonfromHomescreenTest.clickContinue()[pri:8, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="beforeMethod" is-config="true" duration-ms="3011" started-at="2022-04-12T12:28:24 EET" finished-at="2022-04-12T12:28:28 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.getotp(java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getotp(java.lang.String,java.lang.String)[pri:9, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="getotp" duration-ms="6940" started-at="2022-04-12T12:28:28 EET" data-provider="loginUsers" finished-at="2022-04-12T12:28:34 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amira]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getotp -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2]" name="afterMethod" is-config="true" duration-ms="3294" started-at="2022-04-12T12:28:34 EET" finished-at="2022-04-12T12:28:38 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.getotp(java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=getotp status=SUCCESS method=ClickloginbuttonfromHomescreenTest.getotp(java.lang.String,java.lang.String)[pri:9, instance:login.ClickloginbuttonfromHomescreenTest@ca263c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- login.ClickloginbuttonfromHomescreenTest -->
      <class name="driverApi.API_Driver_vehiclepickedup_Test">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:driverApi.API_Driver_vehiclepickedup_Test@52e677af]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:30:53 EET" finished-at="2022-04-12T12:30:56 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_vehiclepickedup_Test.vehiclepickedup(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="vehiclepickedup(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_vehiclepickedup_Test@52e677af]" name="vehiclepickedup" duration-ms="4411" started-at="2022-04-12T12:30:56 EET" data-provider="access_token" finished-at="2022-04-12T12:31:01 EET">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[92276]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[518413]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[9742ffeedb1a46aaa76e706c575da2b7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehiclepickedup -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:driverApi.API_Driver_vehiclepickedup_Test@52e677af]" name="afterMethod" is-config="true" duration-ms="3235" started-at="2022-04-12T12:31:01 EET" finished-at="2022-04-12T12:31:04 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_vehiclepickedup_Test.vehiclepickedup(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=vehiclepickedup status=SUCCESS method=API_Driver_vehiclepickedup_Test.vehiclepickedup(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_vehiclepickedup_Test@52e677af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- driverApi.API_Driver_vehiclepickedup_Test -->
      <class name="fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest@45f45fa1]" name="beforeMethod" is-config="true" duration-ms="3014" started-at="2022-04-12T12:29:31 EET" finished-at="2022-04-12T12:29:34 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest.OpenFleetURL(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="OpenFleetURL(java.lang.String,java.lang.String)[pri:11, instance:fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest@45f45fa1]" name="OpenFleetURL" duration-ms="60081" started-at="2022-04-12T12:29:34 EET" data-provider="loginUsers" finished-at="2022-04-12T12:30:34 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amira]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenFleetURL -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest@45f45fa1]" name="afterMethod" is-config="true" duration-ms="3331" started-at="2022-04-12T12:30:34 EET" finished-at="2022-04-12T12:30:37 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest.OpenFleetURL(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=OpenFleetURL status=SUCCESS method=OpenFleetAndAssignRequestFuelAndBatteryTest.OpenFleetURL(java.lang.String,java.lang.String)[pri:11, instance:fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest@45f45fa1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- fleetAndAdmin.OpenFleetAndAssignRequestFuelAndBatteryTest -->
      <class name="common.RatesheetTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@55a1c291]" name="beforeMethod" is-config="true" duration-ms="3011" started-at="2022-04-12T12:33:16 EET" finished-at="2022-04-12T12:33:19 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.ratedriver()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ratedriver()[pri:1, instance:common.RatesheetTest@55a1c291]" name="ratedriver" duration-ms="100" started-at="2022-04-12T12:33:19 EET" finished-at="2022-04-12T12:33:19 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ratedriver -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@55a1c291]" name="afterMethod" is-config="true" duration-ms="3241" started-at="2022-04-12T12:33:19 EET" finished-at="2022-04-12T12:33:23 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.ratedriver()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ratedriver status=SUCCESS method=RatesheetTest.ratedriver()[pri:1, instance:common.RatesheetTest@55a1c291] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@55a1c291]" name="beforeMethod" is-config="true" duration-ms="3007" started-at="2022-04-12T12:33:23 EET" finished-at="2022-04-12T12:33:26 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.clickratingBarButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickratingBarButton()[pri:2, instance:common.RatesheetTest@55a1c291]" name="clickratingBarButton" duration-ms="64" started-at="2022-04-12T12:33:26 EET" finished-at="2022-04-12T12:33:26 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickratingBarButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@55a1c291]" name="afterMethod" is-config="true" duration-ms="3236" started-at="2022-04-12T12:33:26 EET" finished-at="2022-04-12T12:33:29 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.clickratingBarButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickratingBarButton status=SUCCESS method=RatesheetTest.clickratingBarButton()[pri:2, instance:common.RatesheetTest@55a1c291] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@55a1c291]" name="beforeMethod" is-config="true" duration-ms="3001" started-at="2022-04-12T12:33:29 EET" finished-at="2022-04-12T12:33:32 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.submitRateButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="submitRateButton()[pri:3, instance:common.RatesheetTest@55a1c291]" name="submitRateButton" duration-ms="66" started-at="2022-04-12T12:33:32 EET" finished-at="2022-04-12T12:33:32 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitRateButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@55a1c291]" name="afterMethod" is-config="true" duration-ms="3229" started-at="2022-04-12T12:33:32 EET" finished-at="2022-04-12T12:33:35 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.submitRateButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=submitRateButton status=SUCCESS method=RatesheetTest.submitRateButton()[pri:3, instance:common.RatesheetTest@55a1c291] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@55a1c291]" name="beforeMethod" is-config="true" duration-ms="3004" started-at="2022-04-12T12:33:35 EET" finished-at="2022-04-12T12:33:38 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.assertError()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="assertError()[pri:4, instance:common.RatesheetTest@55a1c291]" name="assertError" duration-ms="59" started-at="2022-04-12T12:33:38 EET" finished-at="2022-04-12T12:33:38 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertError -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@55a1c291]" name="afterMethod" is-config="true" duration-ms="3237" started-at="2022-04-12T12:33:38 EET" finished-at="2022-04-12T12:33:42 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.assertError()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=assertError status=SUCCESS method=RatesheetTest.assertError()[pri:4, instance:common.RatesheetTest@55a1c291] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@55a1c291]" name="beforeMethod" is-config="true" duration-ms="3007" started-at="2022-04-12T12:33:42 EET" finished-at="2022-04-12T12:33:45 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.SelectReason()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectReason()[pri:5, instance:common.RatesheetTest@55a1c291]" name="SelectReason" duration-ms="68" started-at="2022-04-12T12:33:45 EET" finished-at="2022-04-12T12:33:45 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectReason -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@55a1c291]" name="afterMethod" is-config="true" duration-ms="3219" started-at="2022-04-12T12:33:45 EET" finished-at="2022-04-12T12:33:48 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.SelectReason()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectReason status=SUCCESS method=RatesheetTest.SelectReason()[pri:5, instance:common.RatesheetTest@55a1c291] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@55a1c291]" name="beforeMethod" is-config="true" duration-ms="3014" started-at="2022-04-12T12:33:48 EET" finished-at="2022-04-12T12:33:51 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.IssuesTextAssert()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="IssuesTextAssert()[pri:6, instance:common.RatesheetTest@55a1c291]" name="IssuesTextAssert" duration-ms="49" started-at="2022-04-12T12:33:51 EET" finished-at="2022-04-12T12:33:51 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IssuesTextAssert -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@55a1c291]" name="afterMethod" is-config="true" duration-ms="3246" started-at="2022-04-12T12:33:51 EET" finished-at="2022-04-12T12:33:54 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.IssuesTextAssert()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=IssuesTextAssert status=SUCCESS method=RatesheetTest.IssuesTextAssert()[pri:6, instance:common.RatesheetTest@55a1c291] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@55a1c291]" name="beforeMethod" is-config="true" duration-ms="3013" started-at="2022-04-12T12:33:54 EET" finished-at="2022-04-12T12:33:57 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.allstarts() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="allstarts()[pri:7, instance:common.RatesheetTest@55a1c291]" name="allstarts" duration-ms="2121" started-at="2022-04-12T12:33:57 EET" finished-at="2022-04-12T12:33:59 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allstarts -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@55a1c291]" name="afterMethod" is-config="true" duration-ms="3223" started-at="2022-04-12T12:33:59 EET" finished-at="2022-04-12T12:34:03 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.allstarts() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=allstarts status=SUCCESS method=RatesheetTest.allstarts()[pri:7, instance:common.RatesheetTest@55a1c291] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@55a1c291]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:34:03 EET" finished-at="2022-04-12T12:34:06 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.submit5RateButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="submit5RateButton()[pri:8, instance:common.RatesheetTest@55a1c291]" name="submit5RateButton" duration-ms="62" started-at="2022-04-12T12:34:06 EET" finished-at="2022-04-12T12:34:06 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit5RateButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@55a1c291]" name="afterMethod" is-config="true" duration-ms="3238" started-at="2022-04-12T12:34:06 EET" finished-at="2022-04-12T12:34:09 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.submit5RateButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=submit5RateButton status=SUCCESS method=RatesheetTest.submit5RateButton()[pri:8, instance:common.RatesheetTest@55a1c291] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- common.RatesheetTest -->
      <class name="towing.DismissTowingRatesheetTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="beforeMethod" is-config="true" duration-ms="3007" started-at="2022-04-12T12:31:11 EET" finished-at="2022-04-12T12:31:14 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.clickratingBarButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickratingBarButton()[pri:2, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="clickratingBarButton" duration-ms="41239" started-at="2022-04-12T12:31:14 EET" finished-at="2022-04-12T12:31:55 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickratingBarButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="afterMethod" is-config="true" duration-ms="3229" started-at="2022-04-12T12:31:55 EET" finished-at="2022-04-12T12:31:58 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.clickratingBarButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickratingBarButton status=SUCCESS method=DismissTowingRatesheetTest.clickratingBarButton()[pri:2, instance:towing.DismissTowingRatesheetTest@8e0379d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:31:58 EET" finished-at="2022-04-12T12:32:01 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.submitRateButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="submitRateButton()[pri:3, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="submitRateButton" duration-ms="81" started-at="2022-04-12T12:32:01 EET" finished-at="2022-04-12T12:32:01 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitRateButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="afterMethod" is-config="true" duration-ms="3258" started-at="2022-04-12T12:32:01 EET" finished-at="2022-04-12T12:32:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.submitRateButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=submitRateButton status=SUCCESS method=DismissTowingRatesheetTest.submitRateButton()[pri:3, instance:towing.DismissTowingRatesheetTest@8e0379d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:32:05 EET" finished-at="2022-04-12T12:32:08 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.assertError()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="assertError()[pri:4, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="assertError" duration-ms="59" started-at="2022-04-12T12:32:08 EET" finished-at="2022-04-12T12:32:08 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertError -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="afterMethod" is-config="true" duration-ms="3230" started-at="2022-04-12T12:32:08 EET" finished-at="2022-04-12T12:32:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.assertError()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=assertError status=SUCCESS method=DismissTowingRatesheetTest.assertError()[pri:4, instance:towing.DismissTowingRatesheetTest@8e0379d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="beforeMethod" is-config="true" duration-ms="3004" started-at="2022-04-12T12:32:11 EET" finished-at="2022-04-12T12:32:14 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.SelectReason()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectReason()[pri:5, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="SelectReason" duration-ms="66" started-at="2022-04-12T12:32:14 EET" finished-at="2022-04-12T12:32:14 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectReason -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="afterMethod" is-config="true" duration-ms="3242" started-at="2022-04-12T12:32:14 EET" finished-at="2022-04-12T12:32:17 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.SelectReason()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectReason status=SUCCESS method=DismissTowingRatesheetTest.SelectReason()[pri:5, instance:towing.DismissTowingRatesheetTest@8e0379d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:32:17 EET" finished-at="2022-04-12T12:32:20 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.IssuesTextAssert()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="IssuesTextAssert()[pri:6, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="IssuesTextAssert" duration-ms="52" started-at="2022-04-12T12:32:20 EET" finished-at="2022-04-12T12:32:20 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IssuesTextAssert -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="afterMethod" is-config="true" duration-ms="3218" started-at="2022-04-12T12:32:20 EET" finished-at="2022-04-12T12:32:24 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.IssuesTextAssert()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=IssuesTextAssert status=SUCCESS method=DismissTowingRatesheetTest.IssuesTextAssert()[pri:6, instance:towing.DismissTowingRatesheetTest@8e0379d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:32:24 EET" finished-at="2022-04-12T12:32:27 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.allstarts() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="allstarts()[pri:7, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="allstarts" duration-ms="2093" started-at="2022-04-12T12:32:27 EET" finished-at="2022-04-12T12:32:29 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allstarts -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="afterMethod" is-config="true" duration-ms="3212" started-at="2022-04-12T12:32:29 EET" finished-at="2022-04-12T12:32:32 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.allstarts() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=allstarts status=SUCCESS method=DismissTowingRatesheetTest.allstarts()[pri:7, instance:towing.DismissTowingRatesheetTest@8e0379d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="beforeMethod" is-config="true" duration-ms="3013" started-at="2022-04-12T12:32:32 EET" finished-at="2022-04-12T12:32:35 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.clickismissRate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickismissRate()[pri:8, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="clickismissRate" duration-ms="128" started-at="2022-04-12T12:32:35 EET" finished-at="2022-04-12T12:32:35 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickismissRate -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@8e0379d]" name="afterMethod" is-config="true" duration-ms="3261" started-at="2022-04-12T12:32:35 EET" finished-at="2022-04-12T12:32:38 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.clickismissRate()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickismissRate status=SUCCESS method=DismissTowingRatesheetTest.clickismissRate()[pri:8, instance:towing.DismissTowingRatesheetTest@8e0379d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- towing.DismissTowingRatesheetTest -->
      <class name="Fuel.addNormalFuelRequestTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="beforeMethod" is-config="true" duration-ms="3015" started-at="2022-04-12T12:28:38 EET" finished-at="2022-04-12T12:28:41 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.MoveMap()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="MoveMap()[pri:21, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="MoveMap" duration-ms="599" started-at="2022-04-12T12:28:41 EET" finished-at="2022-04-12T12:28:41 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MoveMap -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="afterMethod" is-config="true" duration-ms="3296" started-at="2022-04-12T12:28:41 EET" finished-at="2022-04-12T12:28:45 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.MoveMap()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=MoveMap status=SUCCESS method=addNormalFuelRequestTest.MoveMap()[pri:21, instance:Fuel.addNormalFuelRequestTest@589b3632] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="beforeMethod" is-config="true" duration-ms="3006" started-at="2022-04-12T12:28:45 EET" finished-at="2022-04-12T12:28:48 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.Dragsheet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Dragsheet()[pri:22, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="Dragsheet" duration-ms="724" started-at="2022-04-12T12:28:48 EET" finished-at="2022-04-12T12:28:48 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Dragsheet -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="afterMethod" is-config="true" duration-ms="3297" started-at="2022-04-12T12:28:48 EET" finished-at="2022-04-12T12:28:52 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.Dragsheet()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Dragsheet status=SUCCESS method=addNormalFuelRequestTest.Dragsheet()[pri:22, instance:Fuel.addNormalFuelRequestTest@589b3632] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:28:52 EET" finished-at="2022-04-12T12:28:55 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.selectFuelService()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectFuelService()[pri:23, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="selectFuelService" duration-ms="388" started-at="2022-04-12T12:28:55 EET" finished-at="2022-04-12T12:28:55 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectFuelService -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="afterMethod" is-config="true" duration-ms="3250" started-at="2022-04-12T12:28:55 EET" finished-at="2022-04-12T12:28:58 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.selectFuelService()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=selectFuelService status=SUCCESS method=addNormalFuelRequestTest.selectFuelService()[pri:23, instance:Fuel.addNormalFuelRequestTest@589b3632] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="beforeMethod" is-config="true" duration-ms="3014" started-at="2022-04-12T12:28:58 EET" finished-at="2022-04-12T12:29:01 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.SelectFuelType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectFuelType()[pri:24, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="SelectFuelType" duration-ms="103" started-at="2022-04-12T12:29:01 EET" finished-at="2022-04-12T12:29:01 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectFuelType -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="afterMethod" is-config="true" duration-ms="3242" started-at="2022-04-12T12:29:01 EET" finished-at="2022-04-12T12:29:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.SelectFuelType()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectFuelType status=SUCCESS method=addNormalFuelRequestTest.SelectFuelType()[pri:24, instance:Fuel.addNormalFuelRequestTest@589b3632] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="beforeMethod" is-config="true" duration-ms="3002" started-at="2022-04-12T12:29:05 EET" finished-at="2022-04-12T12:29:08 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.ConfirmfuelType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ConfirmfuelType()[pri:25, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="ConfirmfuelType" duration-ms="373" started-at="2022-04-12T12:29:08 EET" finished-at="2022-04-12T12:29:08 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmfuelType -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="afterMethod" is-config="true" duration-ms="3282" started-at="2022-04-12T12:29:08 EET" finished-at="2022-04-12T12:29:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.ConfirmfuelType()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmfuelType status=SUCCESS method=addNormalFuelRequestTest.ConfirmfuelType()[pri:25, instance:Fuel.addNormalFuelRequestTest@589b3632] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="beforeMethod" is-config="true" duration-ms="3009" started-at="2022-04-12T12:29:11 EET" finished-at="2022-04-12T12:29:14 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.ConfirmpaymentButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ConfirmpaymentButton()[pri:26, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="ConfirmpaymentButton" duration-ms="76" started-at="2022-04-12T12:29:14 EET" finished-at="2022-04-12T12:29:14 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmpaymentButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="afterMethod" is-config="true" duration-ms="3304" started-at="2022-04-12T12:29:14 EET" finished-at="2022-04-12T12:29:18 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.ConfirmpaymentButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmpaymentButton status=SUCCESS method=addNormalFuelRequestTest.ConfirmpaymentButton()[pri:26, instance:Fuel.addNormalFuelRequestTest@589b3632] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:29:18 EET" finished-at="2022-04-12T12:29:21 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.SelectCash()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectCash()[pri:27, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="SelectCash" duration-ms="324" started-at="2022-04-12T12:29:21 EET" finished-at="2022-04-12T12:29:21 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectCash -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="afterMethod" is-config="true" duration-ms="3272" started-at="2022-04-12T12:29:21 EET" finished-at="2022-04-12T12:29:24 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.SelectCash()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectCash status=SUCCESS method=addNormalFuelRequestTest.SelectCash()[pri:27, instance:Fuel.addNormalFuelRequestTest@589b3632] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="beforeMethod" is-config="true" duration-ms="3008" started-at="2022-04-12T12:29:24 EET" finished-at="2022-04-12T12:29:27 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.ConfirmCashPayment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ConfirmCashPayment()[pri:28, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="ConfirmCashPayment" duration-ms="81" started-at="2022-04-12T12:29:27 EET" finished-at="2022-04-12T12:29:27 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmCashPayment -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Fuel.addNormalFuelRequestTest@589b3632]" name="afterMethod" is-config="true" duration-ms="3290" started-at="2022-04-12T12:29:27 EET" finished-at="2022-04-12T12:29:31 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Fuel.addNormalFuelRequestTest.ConfirmCashPayment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmCashPayment status=SUCCESS method=addNormalFuelRequestTest.ConfirmCashPayment()[pri:28, instance:Fuel.addNormalFuelRequestTest@589b3632] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- Fuel.addNormalFuelRequestTest -->
      <class name="common.RequestHistoryTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@341b80b2]" name="beforeMethod" is-config="true" duration-ms="3010" started-at="2022-04-12T12:32:38 EET" finished-at="2022-04-12T12:32:41 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.ClickMenu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ClickMenu()[pri:1, instance:common.RequestHistoryTest@341b80b2]" name="ClickMenu" duration-ms="76" started-at="2022-04-12T12:32:41 EET" finished-at="2022-04-12T12:32:41 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickMenu -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@341b80b2]" name="afterMethod" is-config="true" duration-ms="3292" started-at="2022-04-12T12:32:41 EET" finished-at="2022-04-12T12:32:45 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.ClickMenu()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickMenu status=SUCCESS method=RequestHistoryTest.ClickMenu()[pri:1, instance:common.RequestHistoryTest@341b80b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@341b80b2]" name="beforeMethod" is-config="true" duration-ms="3014" started-at="2022-04-12T12:32:45 EET" finished-at="2022-04-12T12:32:48 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.MenuRequestHistory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="MenuRequestHistory()[pri:2, instance:common.RequestHistoryTest@341b80b2]" name="MenuRequestHistory" duration-ms="423" started-at="2022-04-12T12:32:48 EET" finished-at="2022-04-12T12:32:48 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MenuRequestHistory -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@341b80b2]" name="afterMethod" is-config="true" duration-ms="3252" started-at="2022-04-12T12:32:48 EET" finished-at="2022-04-12T12:32:51 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.MenuRequestHistory()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=MenuRequestHistory status=SUCCESS method=RequestHistoryTest.MenuRequestHistory()[pri:2, instance:common.RequestHistoryTest@341b80b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@341b80b2]" name="beforeMethod" is-config="true" duration-ms="3010" started-at="2022-04-12T12:32:51 EET" finished-at="2022-04-12T12:32:54 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.ClickFristItemRequestHistory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ClickFristItemRequestHistory()[pri:5, instance:common.RequestHistoryTest@341b80b2]" name="ClickFristItemRequestHistory" duration-ms="93" started-at="2022-04-12T12:32:54 EET" finished-at="2022-04-12T12:32:54 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickFristItemRequestHistory -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@341b80b2]" name="afterMethod" is-config="true" duration-ms="3228" started-at="2022-04-12T12:32:54 EET" finished-at="2022-04-12T12:32:58 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.ClickFristItemRequestHistory()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickFristItemRequestHistory status=SUCCESS method=RequestHistoryTest.ClickFristItemRequestHistory()[pri:5, instance:common.RequestHistoryTest@341b80b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@341b80b2]" name="beforeMethod" is-config="true" duration-ms="3014" started-at="2022-04-12T12:32:58 EET" finished-at="2022-04-12T12:33:01 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.scrollitemetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="scrollitemetails()[pri:6, instance:common.RequestHistoryTest@341b80b2]" name="scrollitemetails" duration-ms="346" started-at="2022-04-12T12:33:01 EET" finished-at="2022-04-12T12:33:01 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scrollitemetails -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@341b80b2]" name="afterMethod" is-config="true" duration-ms="3215" started-at="2022-04-12T12:33:01 EET" finished-at="2022-04-12T12:33:04 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.scrollitemetails()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=scrollitemetails status=SUCCESS method=RequestHistoryTest.scrollitemetails()[pri:6, instance:common.RequestHistoryTest@341b80b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@341b80b2]" name="beforeMethod" is-config="true" duration-ms="3011" started-at="2022-04-12T12:33:04 EET" finished-at="2022-04-12T12:33:07 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.callriver()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="callriver()[pri:7, instance:common.RequestHistoryTest@341b80b2]" name="callriver" duration-ms="5873" started-at="2022-04-12T12:33:07 EET" finished-at="2022-04-12T12:33:13 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callriver -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@341b80b2]" name="afterMethod" is-config="true" duration-ms="3233" started-at="2022-04-12T12:33:13 EET" finished-at="2022-04-12T12:33:16 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.callriver()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=callriver status=SUCCESS method=RequestHistoryTest.callriver()[pri:7, instance:common.RequestHistoryTest@341b80b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- common.RequestHistoryTest -->
      <class name="driverApi.API_Driver_savemissingfieldvalue_Test">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:driverApi.API_Driver_savemissingfieldvalue_Test@534df152]" name="beforeMethod" is-config="true" duration-ms="3005" started-at="2022-04-12T12:30:45 EET" finished-at="2022-04-12T12:30:48 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_savemissingfieldvalue_Test.savemissingfieldvalue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="savemissingfieldvalue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_savemissingfieldvalue_Test@534df152]" name="savemissingfieldvalue" duration-ms="1871" started-at="2022-04-12T12:30:48 EET" data-provider="access_token" finished-at="2022-04-12T12:30:50 EET">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[92276]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[518413]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[9742ffeedb1a46aaa76e706c575da2b7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- savemissingfieldvalue -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:driverApi.API_Driver_savemissingfieldvalue_Test@534df152]" name="afterMethod" is-config="true" duration-ms="3257" started-at="2022-04-12T12:30:50 EET" finished-at="2022-04-12T12:30:53 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_savemissingfieldvalue_Test.savemissingfieldvalue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=savemissingfieldvalue status=SUCCESS method=API_Driver_savemissingfieldvalue_Test.savemissingfieldvalue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_savemissingfieldvalue_Test@534df152] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- driverApi.API_Driver_savemissingfieldvalue_Test -->
      <class name="common.allowLocationPermissionTest">
        <test-method status="PASS" signature="beforeTest(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)[pri:0, instance:common.allowLocationPermissionTest@568bf312]" name="beforeTest" is-config="true" duration-ms="8500" started-at="2022-04-12T12:27:29 EET" finished-at="2022-04-12T12:27:38 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.allowLocationPermissionTest@568bf312]" name="beforeMethod" is-config="true" duration-ms="3001" started-at="2022-04-12T12:27:38 EET" finished-at="2022-04-12T12:27:41 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.allowLocationPermissionTest.clcallowLocationPermissionTestikLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clcallowLocationPermissionTestikLogin()[pri:2, instance:common.allowLocationPermissionTest@568bf312]" name="clcallowLocationPermissionTestikLogin" duration-ms="1324" started-at="2022-04-12T12:27:41 EET" finished-at="2022-04-12T12:27:42 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clcallowLocationPermissionTestikLogin -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.allowLocationPermissionTest@568bf312]" name="afterMethod" is-config="true" duration-ms="3274" started-at="2022-04-12T12:27:42 EET" finished-at="2022-04-12T12:27:45 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.allowLocationPermissionTest.clcallowLocationPermissionTestikLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clcallowLocationPermissionTestikLogin status=SUCCESS method=allowLocationPermissionTest.clcallowLocationPermissionTestikLogin()[pri:2, instance:common.allowLocationPermissionTest@568bf312] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- common.allowLocationPermissionTest -->
      <class name="driverApi.API_Driver_FuelAndBattery_completejob_Test">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:driverApi.API_Driver_FuelAndBattery_completejob_Test@35083305]" name="beforeMethod" is-config="true" duration-ms="3006" started-at="2022-04-12T12:31:04 EET" finished-at="2022-04-12T12:31:07 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_FuelAndBattery_completejob_Test.completejob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="completejob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_FuelAndBattery_completejob_Test@35083305]" name="completejob" duration-ms="769" started-at="2022-04-12T12:31:07 EET" data-provider="access_token" finished-at="2022-04-12T12:31:08 EET">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[92276]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[518413]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[9742ffeedb1a46aaa76e706c575da2b7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completejob -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:driverApi.API_Driver_FuelAndBattery_completejob_Test@35083305]" name="afterMethod" is-config="true" duration-ms="3269" started-at="2022-04-12T12:31:08 EET" finished-at="2022-04-12T12:31:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_FuelAndBattery_completejob_Test.completejob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=completejob status=SUCCESS method=API_Driver_FuelAndBattery_completejob_Test.completejob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_FuelAndBattery_completejob_Test@35083305] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- driverApi.API_Driver_FuelAndBattery_completejob_Test -->
      <class name="driverApi.API_Driver_Startjob_Test">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:driverApi.API_Driver_Startjob_Test@4c6e276e]" name="beforeMethod" is-config="true" duration-ms="3013" started-at="2022-04-12T12:30:37 EET" finished-at="2022-04-12T12:30:40 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_Startjob_Test.driverLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="driverLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_Startjob_Test@4c6e276e]" name="driverLogin" duration-ms="1485" started-at="2022-04-12T12:30:40 EET" data-provider="driverdata" finished-at="2022-04-12T12:30:42 EET">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[92276]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[518413]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverLogin -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:driverApi.API_Driver_Startjob_Test@4c6e276e]" name="afterMethod" is-config="true" duration-ms="3269" started-at="2022-04-12T12:30:42 EET" finished-at="2022-04-12T12:30:45 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_Startjob_Test.driverLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=driverLogin status=SUCCESS method=API_Driver_Startjob_Test.driverLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_Startjob_Test@4c6e276e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- driverApi.API_Driver_Startjob_Test -->
    </test> <!-- Fuel -->
    <test name="towing" duration-ms="399343" started-at="2022-04-12T12:34:09 EET" finished-at="2022-04-12T12:40:48 EET">
      <class name="fleetAndAdmin.OpenFleetAndAssignRequestTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:fleetAndAdmin.OpenFleetAndAssignRequestTest@75c072cb]" name="beforeMethod" is-config="true" duration-ms="3014" started-at="2022-04-12T12:36:15 EET" finished-at="2022-04-12T12:36:18 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void fleetAndAdmin.OpenFleetAndAssignRequestTest.OpenFleetURL(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="OpenFleetURL(java.lang.String,java.lang.String)[pri:11, instance:fleetAndAdmin.OpenFleetAndAssignRequestTest@75c072cb]" name="OpenFleetURL" duration-ms="60769" started-at="2022-04-12T12:36:18 EET" data-provider="loginUsers" finished-at="2022-04-12T12:37:19 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amira]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenFleetURL -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:fleetAndAdmin.OpenFleetAndAssignRequestTest@75c072cb]" name="afterMethod" is-config="true" duration-ms="3267" started-at="2022-04-12T12:37:19 EET" finished-at="2022-04-12T12:37:22 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void fleetAndAdmin.OpenFleetAndAssignRequestTest.OpenFleetURL(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=OpenFleetURL status=SUCCESS method=OpenFleetAndAssignRequestTest.OpenFleetURL(java.lang.String,java.lang.String)[pri:11, instance:fleetAndAdmin.OpenFleetAndAssignRequestTest@75c072cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- fleetAndAdmin.OpenFleetAndAssignRequestTest -->
      <class name="login.ClickloginbuttonfromHomescreenTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="beforeMethod" is-config="true" duration-ms="3001" started-at="2022-04-12T12:34:26 EET" finished-at="2022-04-12T12:34:29 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.clcikLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clcikLogin()[pri:3, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="clcikLogin" duration-ms="157" started-at="2022-04-12T12:34:29 EET" finished-at="2022-04-12T12:34:29 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clcikLogin -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="afterMethod" is-config="true" duration-ms="3275" started-at="2022-04-12T12:34:29 EET" finished-at="2022-04-12T12:34:32 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.clcikLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clcikLogin status=SUCCESS method=ClickloginbuttonfromHomescreenTest.clcikLogin()[pri:3, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="beforeMethod" is-config="true" duration-ms="3006" started-at="2022-04-12T12:34:32 EET" finished-at="2022-04-12T12:34:35 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.SelectCountyCode()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectCountyCode()[pri:4, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="SelectCountyCode" duration-ms="91" started-at="2022-04-12T12:34:35 EET" finished-at="2022-04-12T12:34:35 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectCountyCode -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="afterMethod" is-config="true" duration-ms="3246" started-at="2022-04-12T12:34:35 EET" finished-at="2022-04-12T12:34:39 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.SelectCountyCode()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectCountyCode status=SUCCESS method=ClickloginbuttonfromHomescreenTest.SelectCountyCode()[pri:4, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="beforeMethod" is-config="true" duration-ms="3006" started-at="2022-04-12T12:34:39 EET" finished-at="2022-04-12T12:34:42 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.Searchforcounrty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Searchforcounrty()[pri:5, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="Searchforcounrty" duration-ms="705" started-at="2022-04-12T12:34:42 EET" finished-at="2022-04-12T12:34:42 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Searchforcounrty -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="afterMethod" is-config="true" duration-ms="3224" started-at="2022-04-12T12:34:42 EET" finished-at="2022-04-12T12:34:45 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.Searchforcounrty()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Searchforcounrty status=SUCCESS method=ClickloginbuttonfromHomescreenTest.Searchforcounrty()[pri:5, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="beforeMethod" is-config="true" duration-ms="3007" started-at="2022-04-12T12:34:45 EET" finished-at="2022-04-12T12:34:49 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.SelectEgypt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectEgypt()[pri:6, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="SelectEgypt" duration-ms="176" started-at="2022-04-12T12:34:49 EET" finished-at="2022-04-12T12:34:49 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectEgypt -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="afterMethod" is-config="true" duration-ms="3265" started-at="2022-04-12T12:34:49 EET" finished-at="2022-04-12T12:34:52 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.SelectEgypt()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectEgypt status=SUCCESS method=ClickloginbuttonfromHomescreenTest.SelectEgypt()[pri:6, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="beforeMethod" is-config="true" duration-ms="3007" started-at="2022-04-12T12:34:52 EET" finished-at="2022-04-12T12:34:55 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.addMobileNumber(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addMobileNumber(java.lang.String,java.lang.String)[pri:7, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="addMobileNumber" duration-ms="582" started-at="2022-04-12T12:34:55 EET" data-provider="loginUsers" finished-at="2022-04-12T12:34:56 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amira]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMobileNumber -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="afterMethod" is-config="true" duration-ms="3250" started-at="2022-04-12T12:34:56 EET" finished-at="2022-04-12T12:34:59 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.addMobileNumber(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=addMobileNumber status=SUCCESS method=ClickloginbuttonfromHomescreenTest.addMobileNumber(java.lang.String,java.lang.String)[pri:7, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="beforeMethod" is-config="true" duration-ms="3009" started-at="2022-04-12T12:34:59 EET" finished-at="2022-04-12T12:35:02 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.clickContinue()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickContinue()[pri:8, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="clickContinue" duration-ms="63" started-at="2022-04-12T12:35:02 EET" finished-at="2022-04-12T12:35:02 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickContinue -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="afterMethod" is-config="true" duration-ms="3243" started-at="2022-04-12T12:35:02 EET" finished-at="2022-04-12T12:35:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.clickContinue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickContinue status=SUCCESS method=ClickloginbuttonfromHomescreenTest.clickContinue()[pri:8, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="beforeMethod" is-config="true" duration-ms="3004" started-at="2022-04-12T12:35:05 EET" finished-at="2022-04-12T12:35:08 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.getotp(java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getotp(java.lang.String,java.lang.String)[pri:9, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="getotp" duration-ms="4956" started-at="2022-04-12T12:35:08 EET" data-provider="loginUsers" finished-at="2022-04-12T12:35:13 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amira]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getotp -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40]" name="afterMethod" is-config="true" duration-ms="3237" started-at="2022-04-12T12:35:13 EET" finished-at="2022-04-12T12:35:16 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.getotp(java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=getotp status=SUCCESS method=ClickloginbuttonfromHomescreenTest.getotp(java.lang.String,java.lang.String)[pri:9, instance:login.ClickloginbuttonfromHomescreenTest@7d68ef40] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- login.ClickloginbuttonfromHomescreenTest -->
      <class name="driverApi.API_Driver_vehiclepickedup_Test">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:driverApi.API_Driver_vehiclepickedup_Test@2b546384]" name="beforeMethod" is-config="true" duration-ms="3013" started-at="2022-04-12T12:37:38 EET" finished-at="2022-04-12T12:37:41 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_vehiclepickedup_Test.vehiclepickedup(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="vehiclepickedup(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_vehiclepickedup_Test@2b546384]" name="vehiclepickedup" duration-ms="4398" started-at="2022-04-12T12:37:41 EET" data-provider="access_token" finished-at="2022-04-12T12:37:45 EET">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[92279]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[518420]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4912783842ea4b3d93d821b806e8f8f2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehiclepickedup -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:driverApi.API_Driver_vehiclepickedup_Test@2b546384]" name="afterMethod" is-config="true" duration-ms="3260" started-at="2022-04-12T12:37:45 EET" finished-at="2022-04-12T12:37:48 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_vehiclepickedup_Test.vehiclepickedup(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=vehiclepickedup status=SUCCESS method=API_Driver_vehiclepickedup_Test.vehiclepickedup(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_vehiclepickedup_Test@2b546384] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:driverApi.API_Driver_vehiclepickedup_Test@2b546384]" name="beforeMethod" is-config="true" duration-ms="3005" started-at="2022-04-12T12:37:48 EET" finished-at="2022-04-12T12:37:51 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_vehiclepickedup_Test.verifyqrcode(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyqrcode(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_vehiclepickedup_Test@2b546384]" name="verifyqrcode" duration-ms="2162" started-at="2022-04-12T12:37:51 EET" data-provider="access_token" finished-at="2022-04-12T12:37:54 EET">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[92279]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[518420]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4912783842ea4b3d93d821b806e8f8f2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyqrcode -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:driverApi.API_Driver_vehiclepickedup_Test@2b546384]" name="afterMethod" is-config="true" duration-ms="3266" started-at="2022-04-12T12:37:54 EET" finished-at="2022-04-12T12:37:57 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_vehiclepickedup_Test.verifyqrcode(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyqrcode status=SUCCESS method=API_Driver_vehiclepickedup_Test.verifyqrcode(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_vehiclepickedup_Test@2b546384] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- driverApi.API_Driver_vehiclepickedup_Test -->
      <class name="towing.DismissTowingRatesheetTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@214b199c]" name="beforeMethod" is-config="true" duration-ms="3009" started-at="2022-04-12T12:38:04 EET" finished-at="2022-04-12T12:38:07 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.clickratingBarButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickratingBarButton()[pri:2, instance:towing.DismissTowingRatesheetTest@214b199c]" name="clickratingBarButton" duration-ms="27506" started-at="2022-04-12T12:38:07 EET" finished-at="2022-04-12T12:38:34 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickratingBarButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@214b199c]" name="afterMethod" is-config="true" duration-ms="3232" started-at="2022-04-12T12:38:34 EET" finished-at="2022-04-12T12:38:38 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.clickratingBarButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickratingBarButton status=SUCCESS method=DismissTowingRatesheetTest.clickratingBarButton()[pri:2, instance:towing.DismissTowingRatesheetTest@214b199c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@214b199c]" name="beforeMethod" is-config="true" duration-ms="3000" started-at="2022-04-12T12:38:38 EET" finished-at="2022-04-12T12:38:41 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.submitRateButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="submitRateButton()[pri:3, instance:towing.DismissTowingRatesheetTest@214b199c]" name="submitRateButton" duration-ms="78" started-at="2022-04-12T12:38:41 EET" finished-at="2022-04-12T12:38:41 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitRateButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@214b199c]" name="afterMethod" is-config="true" duration-ms="3216" started-at="2022-04-12T12:38:41 EET" finished-at="2022-04-12T12:38:44 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.submitRateButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=submitRateButton status=SUCCESS method=DismissTowingRatesheetTest.submitRateButton()[pri:3, instance:towing.DismissTowingRatesheetTest@214b199c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@214b199c]" name="beforeMethod" is-config="true" duration-ms="3010" started-at="2022-04-12T12:38:44 EET" finished-at="2022-04-12T12:38:47 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.assertError()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="assertError()[pri:4, instance:towing.DismissTowingRatesheetTest@214b199c]" name="assertError" duration-ms="74" started-at="2022-04-12T12:38:47 EET" finished-at="2022-04-12T12:38:47 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertError -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@214b199c]" name="afterMethod" is-config="true" duration-ms="3227" started-at="2022-04-12T12:38:47 EET" finished-at="2022-04-12T12:38:50 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.assertError()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=assertError status=SUCCESS method=DismissTowingRatesheetTest.assertError()[pri:4, instance:towing.DismissTowingRatesheetTest@214b199c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@214b199c]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:38:50 EET" finished-at="2022-04-12T12:38:53 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.SelectReason()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectReason()[pri:5, instance:towing.DismissTowingRatesheetTest@214b199c]" name="SelectReason" duration-ms="85" started-at="2022-04-12T12:38:53 EET" finished-at="2022-04-12T12:38:53 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectReason -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@214b199c]" name="afterMethod" is-config="true" duration-ms="3256" started-at="2022-04-12T12:38:53 EET" finished-at="2022-04-12T12:38:57 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.SelectReason()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectReason status=SUCCESS method=DismissTowingRatesheetTest.SelectReason()[pri:5, instance:towing.DismissTowingRatesheetTest@214b199c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@214b199c]" name="beforeMethod" is-config="true" duration-ms="3002" started-at="2022-04-12T12:38:57 EET" finished-at="2022-04-12T12:39:00 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.IssuesTextAssert()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="IssuesTextAssert()[pri:6, instance:towing.DismissTowingRatesheetTest@214b199c]" name="IssuesTextAssert" duration-ms="56" started-at="2022-04-12T12:39:00 EET" finished-at="2022-04-12T12:39:00 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IssuesTextAssert -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@214b199c]" name="afterMethod" is-config="true" duration-ms="3219" started-at="2022-04-12T12:39:00 EET" finished-at="2022-04-12T12:39:03 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.IssuesTextAssert()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=IssuesTextAssert status=SUCCESS method=DismissTowingRatesheetTest.IssuesTextAssert()[pri:6, instance:towing.DismissTowingRatesheetTest@214b199c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@214b199c]" name="beforeMethod" is-config="true" duration-ms="3000" started-at="2022-04-12T12:39:03 EET" finished-at="2022-04-12T12:39:06 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.allstarts() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="allstarts()[pri:7, instance:towing.DismissTowingRatesheetTest@214b199c]" name="allstarts" duration-ms="2136" started-at="2022-04-12T12:39:06 EET" finished-at="2022-04-12T12:39:08 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allstarts -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@214b199c]" name="afterMethod" is-config="true" duration-ms="3229" started-at="2022-04-12T12:39:08 EET" finished-at="2022-04-12T12:39:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.allstarts() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=allstarts status=SUCCESS method=DismissTowingRatesheetTest.allstarts()[pri:7, instance:towing.DismissTowingRatesheetTest@214b199c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.DismissTowingRatesheetTest@214b199c]" name="beforeMethod" is-config="true" duration-ms="3002" started-at="2022-04-12T12:39:11 EET" finished-at="2022-04-12T12:39:14 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.clickismissRate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickismissRate()[pri:8, instance:towing.DismissTowingRatesheetTest@214b199c]" name="clickismissRate" duration-ms="78" started-at="2022-04-12T12:39:14 EET" finished-at="2022-04-12T12:39:14 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickismissRate -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.DismissTowingRatesheetTest@214b199c]" name="afterMethod" is-config="true" duration-ms="3267" started-at="2022-04-12T12:39:14 EET" finished-at="2022-04-12T12:39:18 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.DismissTowingRatesheetTest.clickismissRate()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickismissRate status=SUCCESS method=DismissTowingRatesheetTest.clickismissRate()[pri:8, instance:towing.DismissTowingRatesheetTest@214b199c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- towing.DismissTowingRatesheetTest -->
      <class name="common.RatesheetTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@2893de87]" name="beforeMethod" is-config="true" duration-ms="3002" started-at="2022-04-12T12:39:56 EET" finished-at="2022-04-12T12:39:59 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.ratedriver()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ratedriver()[pri:1, instance:common.RatesheetTest@2893de87]" name="ratedriver" duration-ms="75" started-at="2022-04-12T12:39:59 EET" finished-at="2022-04-12T12:39:59 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ratedriver -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@2893de87]" name="afterMethod" is-config="true" duration-ms="3225" started-at="2022-04-12T12:39:59 EET" finished-at="2022-04-12T12:40:02 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.ratedriver()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ratedriver status=SUCCESS method=RatesheetTest.ratedriver()[pri:1, instance:common.RatesheetTest@2893de87] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@2893de87]" name="beforeMethod" is-config="true" duration-ms="3008" started-at="2022-04-12T12:40:02 EET" finished-at="2022-04-12T12:40:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.clickratingBarButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickratingBarButton()[pri:2, instance:common.RatesheetTest@2893de87]" name="clickratingBarButton" duration-ms="65" started-at="2022-04-12T12:40:05 EET" finished-at="2022-04-12T12:40:05 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickratingBarButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@2893de87]" name="afterMethod" is-config="true" duration-ms="3229" started-at="2022-04-12T12:40:05 EET" finished-at="2022-04-12T12:40:08 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.clickratingBarButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickratingBarButton status=SUCCESS method=RatesheetTest.clickratingBarButton()[pri:2, instance:common.RatesheetTest@2893de87] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@2893de87]" name="beforeMethod" is-config="true" duration-ms="3015" started-at="2022-04-12T12:40:08 EET" finished-at="2022-04-12T12:40:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.submitRateButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="submitRateButton()[pri:3, instance:common.RatesheetTest@2893de87]" name="submitRateButton" duration-ms="75" started-at="2022-04-12T12:40:11 EET" finished-at="2022-04-12T12:40:11 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitRateButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@2893de87]" name="afterMethod" is-config="true" duration-ms="3242" started-at="2022-04-12T12:40:11 EET" finished-at="2022-04-12T12:40:15 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.submitRateButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=submitRateButton status=SUCCESS method=RatesheetTest.submitRateButton()[pri:3, instance:common.RatesheetTest@2893de87] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@2893de87]" name="beforeMethod" is-config="true" duration-ms="3001" started-at="2022-04-12T12:40:15 EET" finished-at="2022-04-12T12:40:18 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.assertError()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="assertError()[pri:4, instance:common.RatesheetTest@2893de87]" name="assertError" duration-ms="58" started-at="2022-04-12T12:40:18 EET" finished-at="2022-04-12T12:40:18 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertError -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@2893de87]" name="afterMethod" is-config="true" duration-ms="3214" started-at="2022-04-12T12:40:18 EET" finished-at="2022-04-12T12:40:21 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.assertError()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=assertError status=SUCCESS method=RatesheetTest.assertError()[pri:4, instance:common.RatesheetTest@2893de87] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@2893de87]" name="beforeMethod" is-config="true" duration-ms="3007" started-at="2022-04-12T12:40:21 EET" finished-at="2022-04-12T12:40:24 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.SelectReason()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectReason()[pri:5, instance:common.RatesheetTest@2893de87]" name="SelectReason" duration-ms="66" started-at="2022-04-12T12:40:24 EET" finished-at="2022-04-12T12:40:24 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectReason -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@2893de87]" name="afterMethod" is-config="true" duration-ms="3231" started-at="2022-04-12T12:40:24 EET" finished-at="2022-04-12T12:40:27 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.SelectReason()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectReason status=SUCCESS method=RatesheetTest.SelectReason()[pri:5, instance:common.RatesheetTest@2893de87] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@2893de87]" name="beforeMethod" is-config="true" duration-ms="3011" started-at="2022-04-12T12:40:27 EET" finished-at="2022-04-12T12:40:30 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.IssuesTextAssert()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="IssuesTextAssert()[pri:6, instance:common.RatesheetTest@2893de87]" name="IssuesTextAssert" duration-ms="49" started-at="2022-04-12T12:40:30 EET" finished-at="2022-04-12T12:40:30 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IssuesTextAssert -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@2893de87]" name="afterMethod" is-config="true" duration-ms="3233" started-at="2022-04-12T12:40:30 EET" finished-at="2022-04-12T12:40:34 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.IssuesTextAssert()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=IssuesTextAssert status=SUCCESS method=RatesheetTest.IssuesTextAssert()[pri:6, instance:common.RatesheetTest@2893de87] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@2893de87]" name="beforeMethod" is-config="true" duration-ms="3007" started-at="2022-04-12T12:40:34 EET" finished-at="2022-04-12T12:40:37 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.allstarts() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="allstarts()[pri:7, instance:common.RatesheetTest@2893de87]" name="allstarts" duration-ms="2097" started-at="2022-04-12T12:40:37 EET" finished-at="2022-04-12T12:40:39 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allstarts -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@2893de87]" name="afterMethod" is-config="true" duration-ms="3232" started-at="2022-04-12T12:40:39 EET" finished-at="2022-04-12T12:40:42 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.allstarts() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=allstarts status=SUCCESS method=RatesheetTest.allstarts()[pri:7, instance:common.RatesheetTest@2893de87] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RatesheetTest@2893de87]" name="beforeMethod" is-config="true" duration-ms="3014" started-at="2022-04-12T12:40:42 EET" finished-at="2022-04-12T12:40:45 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.submit5RateButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="submit5RateButton()[pri:8, instance:common.RatesheetTest@2893de87]" name="submit5RateButton" duration-ms="77" started-at="2022-04-12T12:40:45 EET" finished-at="2022-04-12T12:40:45 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submit5RateButton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RatesheetTest@2893de87]" name="afterMethod" is-config="true" duration-ms="3252" started-at="2022-04-12T12:40:45 EET" finished-at="2022-04-12T12:40:48 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RatesheetTest.submit5RateButton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=submit5RateButton status=SUCCESS method=RatesheetTest.submit5RateButton()[pri:8, instance:common.RatesheetTest@2893de87] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- common.RatesheetTest -->
      <class name="towing.addNormalTowingRequestTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="beforeMethod" is-config="true" duration-ms="3004" started-at="2022-04-12T12:35:16 EET" finished-at="2022-04-12T12:35:19 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.selectTowingService()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectTowingService()[pri:10, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="selectTowingService" duration-ms="117" started-at="2022-04-12T12:35:19 EET" finished-at="2022-04-12T12:35:19 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTowingService -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="afterMethod" is-config="true" duration-ms="3267" started-at="2022-04-12T12:35:19 EET" finished-at="2022-04-12T12:35:23 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.selectTowingService()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=selectTowingService status=SUCCESS method=addNormalTowingRequestTest.selectTowingService()[pri:10, instance:towing.addNormalTowingRequestTest@5b0abc94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="beforeMethod" is-config="true" duration-ms="3006" started-at="2022-04-12T12:35:23 EET" finished-at="2022-04-12T12:35:26 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.selectNormalTowing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectNormalTowing()[pri:11, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="selectNormalTowing" duration-ms="487" started-at="2022-04-12T12:35:26 EET" finished-at="2022-04-12T12:35:26 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectNormalTowing -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="afterMethod" is-config="true" duration-ms="3253" started-at="2022-04-12T12:35:26 EET" finished-at="2022-04-12T12:35:29 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.selectNormalTowing()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=selectNormalTowing status=SUCCESS method=addNormalTowingRequestTest.selectNormalTowing()[pri:11, instance:towing.addNormalTowingRequestTest@5b0abc94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="beforeMethod" is-config="true" duration-ms="3006" started-at="2022-04-12T12:35:29 EET" finished-at="2022-04-12T12:35:32 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.AddingDestination()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="AddingDestination()[pri:12, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="AddingDestination" duration-ms="81" started-at="2022-04-12T12:35:32 EET" finished-at="2022-04-12T12:35:33 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddingDestination -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="afterMethod" is-config="true" duration-ms="3285" started-at="2022-04-12T12:35:33 EET" finished-at="2022-04-12T12:35:36 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.AddingDestination()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=AddingDestination status=SUCCESS method=addNormalTowingRequestTest.AddingDestination()[pri:12, instance:towing.addNormalTowingRequestTest@5b0abc94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="beforeMethod" is-config="true" duration-ms="3002" started-at="2022-04-12T12:35:36 EET" finished-at="2022-04-12T12:35:39 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.ClickSearchDest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ClickSearchDest()[pri:13, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="ClickSearchDest" duration-ms="270" started-at="2022-04-12T12:35:39 EET" finished-at="2022-04-12T12:35:39 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickSearchDest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="afterMethod" is-config="true" duration-ms="3238" started-at="2022-04-12T12:35:39 EET" finished-at="2022-04-12T12:35:42 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.ClickSearchDest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickSearchDest status=SUCCESS method=addNormalTowingRequestTest.ClickSearchDest()[pri:13, instance:towing.addNormalTowingRequestTest@5b0abc94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="beforeMethod" is-config="true" duration-ms="3000" started-at="2022-04-12T12:35:42 EET" finished-at="2022-04-12T12:35:45 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.SendDestLocation(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SendDestLocation(java.lang.String,java.lang.String)[pri:14, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="SendDestLocation" duration-ms="707" started-at="2022-04-12T12:35:45 EET" data-provider="Locations" finished-at="2022-04-12T12:35:46 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Towing destination Location]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[International City - Warsan 2 - Dubai - United Arab Emirates]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendDestLocation -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="afterMethod" is-config="true" duration-ms="3241" started-at="2022-04-12T12:35:46 EET" finished-at="2022-04-12T12:35:49 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.SendDestLocation(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SendDestLocation status=SUCCESS method=addNormalTowingRequestTest.SendDestLocation(java.lang.String,java.lang.String)[pri:14, instance:towing.addNormalTowingRequestTest@5b0abc94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="beforeMethod" is-config="true" duration-ms="3004" started-at="2022-04-12T12:35:49 EET" finished-at="2022-04-12T12:35:52 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.ClickSearchItem()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ClickSearchItem()[pri:15, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="ClickSearchItem" duration-ms="75" started-at="2022-04-12T12:35:52 EET" finished-at="2022-04-12T12:35:52 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickSearchItem -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="afterMethod" is-config="true" duration-ms="3345" started-at="2022-04-12T12:35:52 EET" finished-at="2022-04-12T12:35:56 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.ClickSearchItem()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickSearchItem status=SUCCESS method=addNormalTowingRequestTest.ClickSearchItem()[pri:15, instance:towing.addNormalTowingRequestTest@5b0abc94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="beforeMethod" is-config="true" duration-ms="3015" started-at="2022-04-12T12:35:56 EET" finished-at="2022-04-12T12:35:59 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.ConfirmDestination()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ConfirmDestination()[pri:16, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="ConfirmDestination" duration-ms="363" started-at="2022-04-12T12:35:59 EET" finished-at="2022-04-12T12:35:59 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmDestination -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="afterMethod" is-config="true" duration-ms="3257" started-at="2022-04-12T12:35:59 EET" finished-at="2022-04-12T12:36:02 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.ConfirmDestination()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmDestination status=SUCCESS method=addNormalTowingRequestTest.ConfirmDestination()[pri:16, instance:towing.addNormalTowingRequestTest@5b0abc94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="beforeMethod" is-config="true" duration-ms="3015" started-at="2022-04-12T12:36:02 EET" finished-at="2022-04-12T12:36:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.ConfirmTowingRequest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ConfirmTowingRequest()[pri:17, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="ConfirmTowingRequest" duration-ms="79" started-at="2022-04-12T12:36:05 EET" finished-at="2022-04-12T12:36:05 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmTowingRequest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="afterMethod" is-config="true" duration-ms="3282" started-at="2022-04-12T12:36:05 EET" finished-at="2022-04-12T12:36:09 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.ConfirmTowingRequest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmTowingRequest status=SUCCESS method=addNormalTowingRequestTest.ConfirmTowingRequest()[pri:17, instance:towing.addNormalTowingRequestTest@5b0abc94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="beforeMethod" is-config="true" duration-ms="3002" started-at="2022-04-12T12:36:09 EET" finished-at="2022-04-12T12:36:12 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.ConfirmPaymentTowingRequest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ConfirmPaymentTowingRequest()[pri:18, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="ConfirmPaymentTowingRequest" duration-ms="377" started-at="2022-04-12T12:36:12 EET" finished-at="2022-04-12T12:36:12 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmPaymentTowingRequest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:towing.addNormalTowingRequestTest@5b0abc94]" name="afterMethod" is-config="true" duration-ms="3273" started-at="2022-04-12T12:36:12 EET" finished-at="2022-04-12T12:36:15 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void towing.addNormalTowingRequestTest.ConfirmPaymentTowingRequest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmPaymentTowingRequest status=SUCCESS method=addNormalTowingRequestTest.ConfirmPaymentTowingRequest()[pri:18, instance:towing.addNormalTowingRequestTest@5b0abc94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- towing.addNormalTowingRequestTest -->
      <class name="driverApi.API_Driver_completejob_Test">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:driverApi.API_Driver_completejob_Test@5d740a0f]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:37:57 EET" finished-at="2022-04-12T12:38:00 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_completejob_Test.completejob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="completejob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_completejob_Test@5d740a0f]" name="completejob" duration-ms="828" started-at="2022-04-12T12:38:00 EET" data-provider="access_token" finished-at="2022-04-12T12:38:01 EET">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[92279]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[518420]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4912783842ea4b3d93d821b806e8f8f2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completejob -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:driverApi.API_Driver_completejob_Test@5d740a0f]" name="afterMethod" is-config="true" duration-ms="3260" started-at="2022-04-12T12:38:01 EET" finished-at="2022-04-12T12:38:04 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_completejob_Test.completejob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=completejob status=SUCCESS method=API_Driver_completejob_Test.completejob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_completejob_Test@5d740a0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- driverApi.API_Driver_completejob_Test -->
      <class name="common.RequestHistoryTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@20d3d15a]" name="beforeMethod" is-config="true" duration-ms="3009" started-at="2022-04-12T12:39:18 EET" finished-at="2022-04-12T12:39:21 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.ClickMenu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ClickMenu()[pri:1, instance:common.RequestHistoryTest@20d3d15a]" name="ClickMenu" duration-ms="493" started-at="2022-04-12T12:39:21 EET" finished-at="2022-04-12T12:39:21 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickMenu -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@20d3d15a]" name="afterMethod" is-config="true" duration-ms="3227" started-at="2022-04-12T12:39:21 EET" finished-at="2022-04-12T12:39:24 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.ClickMenu()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickMenu status=SUCCESS method=RequestHistoryTest.ClickMenu()[pri:1, instance:common.RequestHistoryTest@20d3d15a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@20d3d15a]" name="beforeMethod" is-config="true" duration-ms="3011" started-at="2022-04-12T12:39:24 EET" finished-at="2022-04-12T12:39:27 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.MenuRequestHistory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="MenuRequestHistory()[pri:2, instance:common.RequestHistoryTest@20d3d15a]" name="MenuRequestHistory" duration-ms="92" started-at="2022-04-12T12:39:27 EET" finished-at="2022-04-12T12:39:27 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MenuRequestHistory -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@20d3d15a]" name="afterMethod" is-config="true" duration-ms="3263" started-at="2022-04-12T12:39:27 EET" finished-at="2022-04-12T12:39:31 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.MenuRequestHistory()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=MenuRequestHistory status=SUCCESS method=RequestHistoryTest.MenuRequestHistory()[pri:2, instance:common.RequestHistoryTest@20d3d15a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@20d3d15a]" name="beforeMethod" is-config="true" duration-ms="3006" started-at="2022-04-12T12:39:31 EET" finished-at="2022-04-12T12:39:34 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.ClickFristItemRequestHistory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ClickFristItemRequestHistory()[pri:5, instance:common.RequestHistoryTest@20d3d15a]" name="ClickFristItemRequestHistory" duration-ms="78" started-at="2022-04-12T12:39:34 EET" finished-at="2022-04-12T12:39:34 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickFristItemRequestHistory -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@20d3d15a]" name="afterMethod" is-config="true" duration-ms="3256" started-at="2022-04-12T12:39:34 EET" finished-at="2022-04-12T12:39:37 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.ClickFristItemRequestHistory()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickFristItemRequestHistory status=SUCCESS method=RequestHistoryTest.ClickFristItemRequestHistory()[pri:5, instance:common.RequestHistoryTest@20d3d15a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@20d3d15a]" name="beforeMethod" is-config="true" duration-ms="3012" started-at="2022-04-12T12:39:37 EET" finished-at="2022-04-12T12:39:40 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.scrollitemetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="scrollitemetails()[pri:6, instance:common.RequestHistoryTest@20d3d15a]" name="scrollitemetails" duration-ms="401" started-at="2022-04-12T12:39:40 EET" finished-at="2022-04-12T12:39:40 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scrollitemetails -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@20d3d15a]" name="afterMethod" is-config="true" duration-ms="3222" started-at="2022-04-12T12:39:40 EET" finished-at="2022-04-12T12:39:44 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.scrollitemetails()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=scrollitemetails status=SUCCESS method=RequestHistoryTest.scrollitemetails()[pri:6, instance:common.RequestHistoryTest@20d3d15a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.RequestHistoryTest@20d3d15a]" name="beforeMethod" is-config="true" duration-ms="3011" started-at="2022-04-12T12:39:44 EET" finished-at="2022-04-12T12:39:47 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.callriver()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="callriver()[pri:7, instance:common.RequestHistoryTest@20d3d15a]" name="callriver" duration-ms="5826" started-at="2022-04-12T12:39:47 EET" finished-at="2022-04-12T12:39:53 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callriver -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.RequestHistoryTest@20d3d15a]" name="afterMethod" is-config="true" duration-ms="3219" started-at="2022-04-12T12:39:53 EET" finished-at="2022-04-12T12:39:56 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.RequestHistoryTest.callriver()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=callriver status=SUCCESS method=RequestHistoryTest.callriver()[pri:7, instance:common.RequestHistoryTest@20d3d15a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- common.RequestHistoryTest -->
      <class name="driverApi.API_Driver_savemissingfieldvalue_Test">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:driverApi.API_Driver_savemissingfieldvalue_Test@25b485ba]" name="beforeMethod" is-config="true" duration-ms="3005" started-at="2022-04-12T12:37:30 EET" finished-at="2022-04-12T12:37:33 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_savemissingfieldvalue_Test.savemissingfieldvalue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="savemissingfieldvalue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_savemissingfieldvalue_Test@25b485ba]" name="savemissingfieldvalue" duration-ms="1270" started-at="2022-04-12T12:37:33 EET" data-provider="access_token" finished-at="2022-04-12T12:37:34 EET">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[92279]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[518420]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4912783842ea4b3d93d821b806e8f8f2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- savemissingfieldvalue -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:driverApi.API_Driver_savemissingfieldvalue_Test@25b485ba]" name="afterMethod" is-config="true" duration-ms="3245" started-at="2022-04-12T12:37:34 EET" finished-at="2022-04-12T12:37:38 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_savemissingfieldvalue_Test.savemissingfieldvalue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=savemissingfieldvalue status=SUCCESS method=API_Driver_savemissingfieldvalue_Test.savemissingfieldvalue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_savemissingfieldvalue_Test@25b485ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- driverApi.API_Driver_savemissingfieldvalue_Test -->
      <class name="common.allowLocationPermissionTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:common.allowLocationPermissionTest@123f1134]" name="beforeSuite" is-config="true" duration-ms="75" started-at="2022-04-12T12:21:26 EET" finished-at="2022-04-12T12:21:26 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)[pri:0, instance:common.allowLocationPermissionTest@123f1134]" name="beforeTest" is-config="true" duration-ms="9136" started-at="2022-04-12T12:34:09 EET" finished-at="2022-04-12T12:34:18 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:common.allowLocationPermissionTest@123f1134]" name="beforeMethod" is-config="true" duration-ms="3014" started-at="2022-04-12T12:34:18 EET" finished-at="2022-04-12T12:34:21 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.allowLocationPermissionTest.clcallowLocationPermissionTestikLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clcallowLocationPermissionTestikLogin()[pri:2, instance:common.allowLocationPermissionTest@123f1134]" name="clcallowLocationPermissionTestikLogin" duration-ms="1425" started-at="2022-04-12T12:34:21 EET" finished-at="2022-04-12T12:34:22 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clcallowLocationPermissionTestikLogin -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.allowLocationPermissionTest@123f1134]" name="afterMethod" is-config="true" duration-ms="3301" started-at="2022-04-12T12:34:22 EET" finished-at="2022-04-12T12:34:26 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.allowLocationPermissionTest.clcallowLocationPermissionTestikLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clcallowLocationPermissionTestikLogin status=SUCCESS method=allowLocationPermissionTest.clcallowLocationPermissionTestikLogin()[pri:2, instance:common.allowLocationPermissionTest@123f1134] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:common.allowLocationPermissionTest@123f1134]" name="afterSuite" is-config="true" duration-ms="194" started-at="2022-04-12T12:40:48 EET" finished-at="2022-04-12T12:40:48 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- common.allowLocationPermissionTest -->
      <class name="driverApi.API_Driver_Startjob_Test">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:driverApi.API_Driver_Startjob_Test@1f1c7bf6]" name="beforeMethod" is-config="true" duration-ms="3005" started-at="2022-04-12T12:37:22 EET" finished-at="2022-04-12T12:37:25 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_Startjob_Test.driverLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="driverLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_Startjob_Test@1f1c7bf6]" name="driverLogin" duration-ms="1455" started-at="2022-04-12T12:37:25 EET" data-provider="driverdata" finished-at="2022-04-12T12:37:27 EET">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[1117777778]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[92279]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[518420]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverLogin -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:driverApi.API_Driver_Startjob_Test@1f1c7bf6]" name="afterMethod" is-config="true" duration-ms="3253" started-at="2022-04-12T12:37:27 EET" finished-at="2022-04-12T12:37:30 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void driverApi.API_Driver_Startjob_Test.driverLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=driverLogin status=SUCCESS method=API_Driver_Startjob_Test.driverLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:driverApi.API_Driver_Startjob_Test@1f1c7bf6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- driverApi.API_Driver_Startjob_Test -->
    </test> <!-- towing -->
  </suite> <!-- Suite -->
</testng-results>
