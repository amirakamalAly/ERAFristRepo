<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="8" total="20" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="39780" started-at="2022-03-20T13:32:26 EET" finished-at="2022-03-20T13:33:06 EET">
    <groups>
    </groups>
    <test name="Test" duration-ms="39780" started-at="2022-03-20T13:32:26 EET" finished-at="2022-03-20T13:33:06 EET">
      <class name="com.ERA.testcases.LoginWithInvalidSmsCodeTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-03-20T13:32:47 EET" finished-at="2022-03-20T13:32:47 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.clcikLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clcikLogin()[pri:3, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="clcikLogin" duration-ms="2440" started-at="2022-03-20T13:32:47 EET" finished-at="2022-03-20T13:32:50 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clcikLogin -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="afterMethod" is-config="true" duration-ms="286" started-at="2022-03-20T13:32:50 EET" finished-at="2022-03-20T13:32:50 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.clcikLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clcikLogin status=SUCCESS method=LoginWithInvalidSmsCodeTest.clcikLogin()[pri:3, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-03-20T13:32:50 EET" finished-at="2022-03-20T13:32:50 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.SelectCountyCode()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectCountyCode()[pri:4, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="SelectCountyCode" duration-ms="861" started-at="2022-03-20T13:32:50 EET" finished-at="2022-03-20T13:32:51 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectCountyCode -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="afterMethod" is-config="true" duration-ms="339" started-at="2022-03-20T13:32:51 EET" finished-at="2022-03-20T13:32:51 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.SelectCountyCode()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectCountyCode status=SUCCESS method=LoginWithInvalidSmsCodeTest.SelectCountyCode()[pri:4, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-03-20T13:32:51 EET" finished-at="2022-03-20T13:32:51 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.Searchforcounrty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Searchforcounrty()[pri:5, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="Searchforcounrty" duration-ms="562" started-at="2022-03-20T13:32:51 EET" finished-at="2022-03-20T13:32:52 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Searchforcounrty -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="afterMethod" is-config="true" duration-ms="283" started-at="2022-03-20T13:32:52 EET" finished-at="2022-03-20T13:32:52 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.Searchforcounrty()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Searchforcounrty status=SUCCESS method=LoginWithInvalidSmsCodeTest.Searchforcounrty()[pri:5, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-03-20T13:32:52 EET" finished-at="2022-03-20T13:32:52 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.SelectEgypt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SelectEgypt()[pri:6, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="SelectEgypt" duration-ms="455" started-at="2022-03-20T13:32:52 EET" finished-at="2022-03-20T13:32:53 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectEgypt -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="afterMethod" is-config="true" duration-ms="310" started-at="2022-03-20T13:32:53 EET" finished-at="2022-03-20T13:32:53 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.SelectEgypt()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectEgypt status=SUCCESS method=LoginWithInvalidSmsCodeTest.SelectEgypt()[pri:6, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-03-20T13:32:53 EET" finished-at="2022-03-20T13:32:53 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.addMobileNumber(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addMobileNumber(java.lang.String,java.lang.String)[pri:7, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="addMobileNumber" duration-ms="582" started-at="2022-03-20T13:32:53 EET" data-provider="loginUsers" finished-at="2022-03-20T13:32:54 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amira]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1021132355]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMobileNumber -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="afterMethod" is-config="true" duration-ms="261" started-at="2022-03-20T13:32:54 EET" finished-at="2022-03-20T13:32:54 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.addMobileNumber(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=addMobileNumber status=SUCCESS method=LoginWithInvalidSmsCodeTest.addMobileNumber(java.lang.String,java.lang.String)[pri:7, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-03-20T13:32:54 EET" finished-at="2022-03-20T13:32:54 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.clickContinue()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickContinue()[pri:8, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="clickContinue" duration-ms="278" started-at="2022-03-20T13:32:54 EET" finished-at="2022-03-20T13:32:54 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickContinue -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="afterMethod" is-config="true" duration-ms="435" started-at="2022-03-20T13:32:54 EET" finished-at="2022-03-20T13:32:55 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.clickContinue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickContinue status=SUCCESS method=LoginWithInvalidSmsCodeTest.clickContinue()[pri:8, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-03-20T13:32:55 EET" finished-at="2022-03-20T13:32:55 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.getotp(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getotp(java.lang.String,java.lang.String)[pri:9, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="getotp" duration-ms="7804" started-at="2022-03-20T13:32:55 EET" data-provider="loginUsers" finished-at="2022-03-20T13:33:03 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amira]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1021132355]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getotp -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="afterMethod" is-config="true" duration-ms="410" started-at="2022-03-20T13:33:03 EET" finished-at="2022-03-20T13:33:03 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.getotp(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=getotp status=SUCCESS method=LoginWithInvalidSmsCodeTest.getotp(java.lang.String,java.lang.String)[pri:9, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="AssertInvalidOtp()[pri:10, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="AssertInvalidOtp" duration-ms="1590" started-at="2022-03-20T13:33:03 EET" finished-at="2022-03-20T13:33:05 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertInvalidOtp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-03-20T13:33:03 EET" finished-at="2022-03-20T13:33:03 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.AssertInvalidOtp()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="afterMethod" is-config="true" duration-ms="252" started-at="2022-03-20T13:33:05 EET" finished-at="2022-03-20T13:33:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.AssertInvalidOtp()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=AssertInvalidOtp status=SUCCESS method=LoginWithInvalidSmsCodeTest.AssertInvalidOtp()[pri:10, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ClickBackArrow()[pri:11, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="ClickBackArrow" duration-ms="106" started-at="2022-03-20T13:33:05 EET" finished-at="2022-03-20T13:33:05 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickBackArrow -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-03-20T13:33:05 EET" finished-at="2022-03-20T13:33:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.ClickBackArrow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="afterMethod" is-config="true" duration-ms="282" started-at="2022-03-20T13:33:05 EET" finished-at="2022-03-20T13:33:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.ClickBackArrow()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickBackArrow status=SUCCESS method=LoginWithInvalidSmsCodeTest.ClickBackArrow()[pri:11, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-03-20T13:33:05 EET" finished-at="2022-03-20T13:33:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.ClickBackTOHome()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ClickBackTOHome()[pri:12, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="ClickBackTOHome" duration-ms="406" started-at="2022-03-20T13:33:05 EET" finished-at="2022-03-20T13:33:06 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickBackTOHome -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd]" name="afterMethod" is-config="true" duration-ms="396" started-at="2022-03-20T13:33:06 EET" finished-at="2022-03-20T13:33:06 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.LoginWithInvalidSmsCodeTest.ClickBackTOHome()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickBackTOHome status=SUCCESS method=LoginWithInvalidSmsCodeTest.ClickBackTOHome()[pri:12, instance:com.ERA.testcases.LoginWithInvalidSmsCodeTest@3d36e4cd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.ERA.testcases.LoginWithInvalidSmsCodeTest -->
      <class name="com.ERA.testcases.SkipupdateTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.ERA.testcases.SkipupdateTest@551bdc27]" name="beforeSuite" is-config="true" duration-ms="79" started-at="2022-03-20T13:32:26 EET" finished-at="2022-03-20T13:32:26 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)[pri:0, instance:com.ERA.testcases.SkipupdateTest@551bdc27]" name="beforeTest" is-config="true" duration-ms="12015" started-at="2022-03-20T13:32:26 EET" finished-at="2022-03-20T13:32:38 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ERA.testcases.SkipupdateTest@551bdc27]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2022-03-20T13:32:38 EET" finished-at="2022-03-20T13:32:38 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.SkipupdateTest.clickSkip()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickSkip()[pri:1, instance:com.ERA.testcases.SkipupdateTest@551bdc27]" name="clickSkip" duration-ms="6400" started-at="2022-03-20T13:32:38 EET" finished-at="2022-03-20T13:32:45 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSkip -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:com.ERA.testcases.SkipupdateTest@551bdc27]" name="afterMethod" is-config="true" duration-ms="434" started-at="2022-03-20T13:32:45 EET" finished-at="2022-03-20T13:32:45 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.SkipupdateTest.clickSkip()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickSkip status=SUCCESS method=SkipupdateTest.clickSkip()[pri:1, instance:com.ERA.testcases.SkipupdateTest@551bdc27] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.ERA.testcases.SkipupdateTest@551bdc27]" name="afterClass" is-config="true" duration-ms="0" started-at="2022-03-20T13:33:06 EET" finished-at="2022-03-20T13:33:06 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.ERA.testcases.SkipupdateTest@551bdc27]" name="afterSuite" is-config="true" duration-ms="221" started-at="2022-03-20T13:33:06 EET" finished-at="2022-03-20T13:33:06 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.ERA.testcases.SkipupdateTest -->
      <class name="com.ERA.testcases.allowLocationPermissionTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ERA.testcases.allowLocationPermissionTest@5d20e46]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-03-20T13:32:45 EET" finished-at="2022-03-20T13:32:45 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.allowLocationPermissionTest.clcallowLocationPermissionTestikLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clcallowLocationPermissionTestikLogin()[pri:2, instance:com.ERA.testcases.allowLocationPermissionTest@5d20e46]" name="clcallowLocationPermissionTestikLogin" duration-ms="1732" started-at="2022-03-20T13:32:45 EET" finished-at="2022-03-20T13:32:47 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clcallowLocationPermissionTestikLogin -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:com.ERA.testcases.allowLocationPermissionTest@5d20e46]" name="afterMethod" is-config="true" duration-ms="400" started-at="2022-03-20T13:32:47 EET" finished-at="2022-03-20T13:32:47 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ERA.testcases.allowLocationPermissionTest.clcallowLocationPermissionTestikLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clcallowLocationPermissionTestikLogin status=SUCCESS method=allowLocationPermissionTest.clcallowLocationPermissionTestikLogin()[pri:2, instance:com.ERA.testcases.allowLocationPermissionTest@5d20e46] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.ERA.testcases.allowLocationPermissionTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
